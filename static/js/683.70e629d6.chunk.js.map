{"version":3,"file":"static/js/683.70e629d6.chunk.js","mappings":"8TAGaA,EAAWC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ohBAcrBC,EAAOJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0pBAMX,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,GAO1CT,GAMKU,EAAkBT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gQAgB5BQ,EAAcX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,gSAKfU,EAAAA,IAWTC,EAAed,EAAAA,GAAOe,EAACC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,+RACvB,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,IAC1B,SAACF,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,IAC9B,SAACF,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,IAKvC,SAACF,GAAK,OAAKA,EAAMC,MAAMU,OAAOC,cAAc,IACxC,SAACZ,GAAK,OAAKA,EAAMC,MAAMY,UAAUC,CAAC,IAE7B,SAACd,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,IAItCa,EAAqBrB,EAAAA,GAAOC,IAAGqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,qFAC/B,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,IAU/Be,GALavB,EAAAA,GAAOC,IAAGuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,0EAKDH,EAAAA,GAAOe,EAACU,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,uEAG5B,SAACG,GAAK,OAAKA,EAAMC,MAAMY,UAAUC,CAAC,KAEpCM,EAAqB1B,EAAAA,GAAOC,IAAG0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,8EAE7B,SAACG,GAAK,OAAKA,EAAMC,MAAMY,UAAUS,CAAC,IAC3B,SAACtB,GAAK,MAAoB,SAAfA,EAAMuB,MAAmB,QAAQ,IAGrDC,EAAgB9B,EAAAA,GAAOe,EAACgB,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,oEAE1B,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOe,KAAK,IAUjCC,GANYjC,EAAAA,GAAOe,EAACmB,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,oEAEtB,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOkB,MAAM,IAInBnC,EAAAA,GAAOe,EAACqB,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,mFAMvBkC,EAAWrC,EAAAA,GAAOC,IAAGqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,uGAc5BoC,GAASC,EAAAA,EAAAA,IAASC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,wEASlBuC,GAAeF,EAAAA,EAAAA,IAASG,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,kFASjByC,EAAU5C,EAAAA,GAAOC,IAAG4C,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,4GACZoC,EACNG,GAIFI,EAAY9C,EAAAA,GAAOC,IAAG8C,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,wxB,SCqFnC,EAxNiB,SAAH6C,GAoBP,IAnBLC,EAAOD,EAAPC,QAAOC,EAAAF,EACPC,QACEE,EAAGD,EAAHC,IACAC,EAAeF,EAAfE,gBACAC,EAAIH,EAAJG,KACAC,EAAaJ,EAAbI,cACAC,EAAQL,EAARK,SACAC,EAAIN,EAAJM,KACAC,EAAmBP,EAAnBO,oBAEFC,EAAcV,EAAdU,eACAC,EAAQX,EAARW,SACAC,EAAKZ,EAALY,MACAC,EAAUb,EAAVa,WACAC,EAAYd,EAAZc,aACSC,EAAOf,EAAhBgB,QACAC,EAAMjB,EAANiB,OACUC,EAAQlB,EAAlBmB,SACAC,EAAIpB,EAAJoB,KAEAC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA8CT,EAAAA,EAAAA,WAAS,GAAMU,IAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAClCG,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KAgCR,OA9BAG,EAAAA,EAAAA,YAAU,WACRZ,GAASa,EAAAA,EAAAA,IAAY9B,GACvB,GAAG,CAACA,KA6BF+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,EAAAA,MAACpF,EAAI,CAACsF,QAAShC,EAAeC,SAAA,EAC5B6B,EAAAA,EAAAA,MAAC/E,EAAe,CAACgE,MAAOA,EAAMd,SAAA,EAC5B6B,EAAAA,EAAAA,MAAC7E,EAAW,CAAC8D,MAAOA,EAAMd,SAAA,EACxBgC,EAAAA,EAAAA,KAACC,EAAAA,gBAAe,CACdC,KAAMxC,EACNyC,OAAQ,kBACNC,EAAAA,GAAMC,KAAK,sBAADC,OAAQ5C,EAAI,kJAA8B,EACrDM,UAEDgC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTC,KAAMC,EAAAA,IACNC,WAAW,OACXC,SAAS,WACTC,QAAQ,QACRC,QAAQ,8DAGZb,EAAAA,EAAAA,KAAC7E,EAAY,CAAA6C,SAAEN,QAGjBmC,EAAAA,EAAAA,MAACnE,EAAkB,CAAAsC,SAAA,CAChBC,GACC4B,EAAAA,EAAAA,MAAA,OAAA7B,SAAA,EACEgC,EAAAA,EAAAA,KAACjE,EAAkB,CAAAiC,UAChB8C,EAAAA,EAAAA,IAAQ7C,EAAON,MAElBqC,EAAAA,EAAAA,KAACC,EAAAA,gBAAe,CACdC,KAAMvC,EACNwC,OAAQ,kBACNC,EAAAA,GAAMC,KAAK,GAADC,OAAI3C,EAAa,kJAA8B,EAC1DK,UAEDgC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTC,KAAMC,EAAAA,IACNC,WAAW,OACXC,SAAS,WACTC,QAAQ,OACRC,QAAQ,iEAKdhB,EAAAA,EAAAA,MAAA,OAAA7B,SAAA,EACEgC,EAAAA,EAAAA,KAACC,EAAAA,gBAAe,CACdC,KAAMvC,EACNwC,OAAQ,kBACNC,EAAAA,GAAMC,KAAK,GAADC,OAAI3C,EAAa,kJAA8B,EAC1DK,UAEDgC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTC,KAAMC,EAAAA,IACNC,WAAW,OACXC,SAAS,WACTC,QAAQ,OACRC,QAAQ,8DAGZb,EAAAA,EAAAA,KAACpE,EAAmB,CAAAoC,SAAEL,QAG1BkC,EAAAA,EAAAA,MAACnD,EAAQ,CAAAsB,SAAA,CACNH,GAAiB,aAATA,IACPgC,EAAAA,EAAAA,MAACvD,EAAY,CAAA0B,SAAA,CAAC,oFAAiBH,KAGhCD,IACCiC,EAAAA,EAAAA,MAAC1D,EAAa,CAAA6B,SAAA,CAAC,6BAAOJ,EAAS,sBAM7B,UAAT4B,KACCK,EAAAA,EAAAA,MAACzF,EAAQ,CAAA4D,SAAA,EACPgC,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTQ,GAAG,MACHP,KAAMQ,EAAAA,IACNN,WAAW,UACXE,QAAQ,UACRC,QAAQ,uCACRd,QAAS,WA3GrB,IAAuBgB,EAEnB5B,EADED,KADiB6B,EA2GkBvD,GAzGnB,KAEAuD,EAuGuB,KAEnCf,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTC,KAAMS,EAAAA,IACNP,WAAW,UACXE,QAAQ,UACRC,QAAQ,+DACRd,QAAS,WA1GrB,IAAyBgB,EAErBxB,GADED,MADmByB,EA0GkBvD,GAxGpB,KAEAuD,EAsGwB,KAErCf,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTC,KAAMU,EAAAA,IACNR,WAAW,UACXE,QAAQ,UACRC,QAAQ,mDACRd,QAAS,kBAAM5B,EAAaX,EAAI,WAMxCqC,EAAAA,EAAAA,MAACsB,EAAAA,EAAe,CAAAnD,SAAA,CACbkB,IACCc,EAAAA,EAAAA,KAACoB,EAAAA,EACC,CACAC,WAAW,OACXC,QAAS,IACTC,eAAa,EAAAvD,UAEbgC,EAAAA,EAAAA,KAAC7C,EAAS,CAAAa,UACRgC,EAAAA,EAAAA,KAAC5B,EAAO,CACN2C,GAAIvD,EACJE,KAAMA,EACND,gBAAiBA,EACjB+D,QAAS,WA1HrBrC,EAAkB,KA0HuB,EAC7Bb,OAAQA,EACRhB,QAASA,QAMhBgC,KACCU,EAAAA,EAAAA,KAACoB,EAAAA,EAAa,CACZK,GAAInC,GACJ+B,WAAW,OACXC,QAAS,IACTC,eAAa,EAAAvD,UAEbgC,EAAAA,EAAAA,KAAC7C,EAAS,CAAAa,UACRgC,EAAAA,EAAAA,KAACzB,EAAQ,CACPwC,GAAIvD,EACJE,KAAMA,EACND,gBAAiBA,EACjB+D,QAAS,WA1IrBjC,GAAmB,KA0IuB,EAC9Bd,KAAMA,EACNnB,QAASA,QAMhBY,IACC8B,EAAAA,EAAAA,KAACoB,EAAAA,EACC,CACAC,WAAW,OACXC,QAAS,IACTC,eAAa,EAAAvD,UAEbgC,EAAAA,EAAAA,KAAC7C,EAAS,CAAAa,UACRgC,EAAAA,EAAAA,KAAC/C,EAAO,CAAAe,SAAEA,aAOxB,C,iMCjPa0D,EAAOrH,EAAAA,GAAOsH,GAAEpH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oFACZ,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,GAG9BK,EAAAA,IAGL0G,EAAOvH,EAAAA,GAAOwH,GAAEnH,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wHAOR,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,I,0FCdvCiH,GAAazH,EAAAA,EAAAA,IAAO0H,EAAAA,GAAP1H,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uRAWtB,SAACG,GAAK,OAAKA,EAAMC,MAAMoH,QAAQC,IAAI,IAItCC,EAAY7H,EAAAA,GAAO8H,GAAEzH,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAIrBkB,EAAqBrB,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sGAO/B4H,GAAW/H,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAaY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,6gBACf,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAnF,GAAc,OAAAA,EAAXoF,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAQ3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAUhC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IACzB,SAAC7H,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACnD,SAAC3H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IACnC,SAAAC,GAAc,OAAAA,EAAXL,WAA6B,IAKvCM,EAAe1I,EAAAA,GAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uLAWzBwI,GAAQ3I,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAasB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,0bACZ,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAS,GAAc,OAAAA,EAAXR,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAM3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAU,GAAc,OAAAA,EAAXT,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAI1CM,EAAS9I,EAAAA,GAAO+I,OAAMvH,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,saACb,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAa,GAAc,OAAAA,EAAXZ,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAO3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAc,GAAc,OAAAA,EAAXb,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAI1CU,EAAalJ,EAAAA,GAAOC,IAAGwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,yIASvBgJ,EAAqBnJ,EAAAA,GAAOC,IAAG0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iFACjC,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOmI,OAAO,IAEjC,SAAC9I,GAAK,OAAKA,EAAMC,MAAMY,UAAUS,CAAC,IAIpCyH,GAAgBrJ,EAAAA,GAAOC,IAAG8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,uD,UC+PvC,GAlXwB,SAAH6C,GAAiC,IAA3BmE,EAAOnE,EAAPmE,QAAST,EAAE1D,EAAF0D,GAAIzC,EAAMjB,EAANiB,OACtCI,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDiF,EAAgB/E,EAAA,GAAEgF,EAAmBhF,EAAA,GA4BtCiF,EAAS,CACb,CACEC,MAAO,2DACP/C,GAAI,UAEN,CACE+C,MAAO,qDACP/C,GAAI,SAEN,CACE+C,MAAO,qDACP/C,GAAI,UAEN,CACE+C,MAAO,+EACP/C,GAAI,WAEN,CACE+C,MAAO,yCACP/C,GAAI,iBAEN,CACE+C,MAAO,iEACP/C,GAAI,aAEN,CACE+C,MAAO,0CACP/C,GAAI,QAEN,CACE+C,MAAO,qCACP/C,GAAI,UAEN,CACE+C,MAAO,0GACP/C,GAAI,uBAEN,CACE+C,MAAO,6CACP/C,GAAI,eAEN,CACE+C,MAAO,kDACP/C,GAAI,qBAEN,CACE+C,MAAO,kDACP/C,GAAI,qBAEN,CACE+C,MAAO,iDACP/C,GAAI,oBAEN,CACE+C,MAAO,iDACP/C,GAAI,oBAEN,CACE+C,MAAO,gEACP/C,GAAI,iBAKFgD,EAAoBC,EAAAA,KAAaC,MAAM,CAC3CtG,cAAeqG,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACTC,SAAS,mHACZC,cAAeL,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACZvG,SAAUoG,EAAAA,KAAaM,UAAU,6EAAiBC,WAClD1G,KAAMmG,EAAAA,KAEHQ,MAxGa,CAAC,WAAY,IAAK,KAAM,KAAM,IAAK,KAAM,QAwGrC,+KACjBJ,SAAS,8HACZK,OAAQT,EAAAA,KAELM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIACXC,MAAOX,EAAAA,KAEJM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIAEXE,OAAQZ,EAAAA,KAELM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIACXG,QAASb,EAAAA,KAENM,UAAU,6EACVC,SAAS,uJACZO,cAAed,EAAAA,KAEZM,UAAU,6EACVC,SAAS,uJACZQ,UAAWf,EAAAA,KAERM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIACXM,KAAMhB,EAAAA,KAEHM,UAAU,6EACVC,SAAS,uJACZU,OAAQjB,EAAAA,KAELM,UAAU,6EACVC,SAAS,uJACZW,oBAAqBlB,EAAAA,KAElBM,UAAU,6EACVC,SAAS,uJACZY,YAAanB,EAAAA,KAEVM,UAAU,6EACVC,SAAS,uJACZa,kBAAmBpB,EAAAA,KAEhBM,UAAU,6EACVC,SAAS,uJACZc,kBAAmBrB,EAAAA,KAEhBM,UAAU,6EACVC,SAAS,uJACZe,iBAAkBtB,EAAAA,KAEfM,UAAU,6EACVC,SAAS,uJACZgB,iBAAkBvB,EAAAA,KAEfM,UAAU,6EACVC,SAAS,uJACZiB,aAAcxB,EAAAA,KAEXE,IAAI,EAAG,wHACPC,IAAI,IAAK,8GA4Bd,OACEtE,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAA9B,SAAA,EACEgC,EAAAA,GAAAA,KAACkC,EAAS,CAAAlE,SAAC,2FACXgC,EAAAA,GAAAA,KAACyF,EAAAA,GAAM,CACLC,cAvMgB,CACpB/H,cAAe,GACf0G,cAAe,GACfzG,SAAU,GACVC,KAAM,GACN4G,OAAQ,GACRE,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,cAAe,GACfC,UAAW,GACXC,KAAM,GACNC,OAAQ,GACRC,oBAAqB,GACrBC,YAAa,GACbC,kBAAmB,GACnBC,kBAAmB,GACnBC,iBAAkB,GAClBC,iBAAkB,GAClBC,aAAc,GACdG,QAAS,IAoLLC,iBAAkB7B,EAClB8B,SA1Be,SAACC,EAAQC,GAE5B,IAAQC,EAAcD,EAAdC,UAGFC,EAAiBC,OAAOC,YAC5BD,OAAOE,QAAQN,GAAQO,QAAO,SAAAvD,GAAA,IAAAG,GAAApE,EAAAA,EAAAA,GAAAiE,EAAA,GAAKG,EAAA,GAAO,MAAgB,KAAhBA,EAAA,EAAkB,KAGxDqD,GAAiBC,EAAAA,EAAAA,GAAA,CACrB9I,gBAAiBsD,GACdkF,GAGL3H,EAAOgI,GAEPN,IACAxE,GACF,EAQ6BxD,SAEtB,SAACrD,GAAK,OACLkF,EAAAA,GAAAA,MAACiC,EAAU,CAAA9D,SAAA,EACTgC,EAAAA,GAAAA,KAACwG,EAAAA,GAAW,CAACzG,QAASyB,EAAShB,KAAMiG,EAAAA,OAErC5G,EAAAA,GAAAA,MAACnE,EAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,GAAAA,KAACoC,EAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,wKACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnJ,cACbhD,EAAMmL,OAAOnI,kBAGjBqC,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,GAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAInEpH,EAAAA,GAAAA,MAACkD,EAAY,CAAA/E,SAAA,EACXgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,OAAM1I,SAAC,qFACtB6B,EAAAA,GAAAA,MAACwC,EAAAA,GAAK,CACJ6E,GAAI/D,EACJwD,KAAK,OACLlE,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOjJ,KACblD,EAAMmL,OAAOjI,MACbG,SAAA,EAEFgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,GAAGC,UAAQ,EAACC,QAAM,EAAArJ,SAAC,gIAGjCgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,WAAUnJ,SAAC,4DACzBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,OAAMnJ,SAAC,oCACrBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,+EAClBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,2FACnBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,+EACnBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,8BAClBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,yDAGrBgC,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,OACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,GAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAInEpH,EAAAA,GAAAA,MAACkD,EAAY,CAAA/E,SAAA,EACXgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,WAAU1I,SAAC,yDAC1BgC,EAAAA,GAAAA,KAACgD,EAAK,CACJ9G,KAAK,OACL0K,YAAY,2BACZD,KAAK,WACL5F,GAAG,WACH0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOlJ,SACbjD,EAAMmL,OAAOlI,aAGjBoC,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,WACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,GAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAInEjH,EAAAA,GAAAA,KAACO,EAAAA,GAAU,CACTrE,KAAK,SACLwE,WAAW,UACXE,QAAQ,UACRC,QAAS,4HACTL,KACEmD,EACI2D,EAAAA,IACAC,EAAAA,IAENxH,QAAS,WA7GnB6D,GAAqBD,EA6G4B,IAExCA,IACC9D,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,GAAAA,MAACnE,EAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,GAAAA,KAACoC,EAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,wKACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOzC,cACb1J,EAAMmL,OAAOzB,kBAGjBrE,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,GAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAIpDjH,EAAAA,GAAAA,KAACuD,EAAU,CAAAvF,SACR6F,EAAO2D,KAAI,SAAAtE,GAAA,IAAGnC,EAAEmC,EAAFnC,GAAI+C,EAAKZ,EAALY,MAAK,OACtBjE,EAAAA,GAAAA,MAACkD,EAAY,CAAA/E,SAAA,EACXgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAS3F,EAAG/C,SAAE8F,KACrB9D,EAAAA,GAAAA,KAACgD,EAAK,CACJ9G,KAAK,OACL0K,YAAa9C,EACb6C,KAAM5F,EACNA,GAAIA,EACJ0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAO/F,GACbpG,EAAMmL,OAAO/E,OAGjBf,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAM5F,EACNiG,OAAQ,SAACC,GAAG,OACVjH,EAAAA,GAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,MAfjClG,EAkBJ,OAGnBlB,EAAAA,GAAAA,MAACnE,EAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,UAAS1I,SAAC,sDACzBgC,EAAAA,GAAAA,KAACoC,EAAQ,CACPuE,KAAK,UACL5F,GAAG,UACH6F,YAAY,8FACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnB,QACbhL,EAAMmL,OAAOH,YAGjB3F,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,UACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,GAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,WAOxDjH,EAAAA,GAAAA,KAAC0D,GAAa,CAAA1F,UACZgC,EAAAA,GAAAA,KAACyH,EAAAA,GAAM,CACLvL,KAAK,SACLkL,SAAUlB,OAAOwB,KAAK/M,EAAMmM,QAAQa,OAAS,EAAE3J,SAChD,6CAIQ,MAMvB,ECnYa8D,IAAazH,EAAAA,EAAAA,IAAO0H,EAAAA,GAAP1H,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uRAWtB,SAACG,GAAK,OAAKA,EAAMC,MAAMoH,QAAQC,IAAI,IAItCC,GAAY7H,EAAAA,GAAO8H,GAAEzH,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAGrBkB,GAAqBrB,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sGAO/B4H,IAAW/H,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAaY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,6gBACf,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAnF,GAAc,OAAAA,EAAXoF,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAQ3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAUhC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IACzB,SAAC7H,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACnD,SAAC3H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IACnC,SAAAC,GAAc,OAAAA,EAAXL,WAA6B,IAKvCM,GAAe1I,EAAAA,GAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uLAWzBwI,IAAQ3I,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAasB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,0bACZ,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAS,GAAc,OAAAA,EAAXR,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAM3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAU,GAAc,OAAAA,EAAXT,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAI1CM,GAAS9I,EAAAA,GAAO+I,OAAMvH,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,saACb,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAa,GAAc,OAAAA,EAAXZ,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAO3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAc,GAAc,OAAAA,EAAXb,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAI1CU,GAAalJ,EAAAA,GAAOC,IAAGwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,yIASvBgJ,GAAqBnJ,EAAAA,GAAOC,IAAG0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iFACjC,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOmI,OAAO,IAEjC,SAAC9I,GAAK,OAAKA,EAAMC,MAAMY,UAAUS,CAAC,IAIpCyH,GAAgBrJ,EAAAA,GAAOC,IAAG8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,qDC2QvC,GA7XyB,SAAH6C,GAAwC,IAAlCC,EAAOD,EAAPC,QAASkE,EAAOnE,EAAPmE,QAAST,EAAE1D,EAAF0D,GAAItC,EAAIpB,EAAJoB,KAChDC,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDiF,EAAgB/E,EAAA,GAAEgF,EAAmBhF,EAAA,GAItCgJ,EAAgB,SAACC,EAAKC,GAC1B,OACGD,GACyB,qBAAnBA,EAAIC,IACQ,OAAnBD,EAAIC,GAIGD,EAAIC,GAFJ,EAIX,EAGMpC,EAAgB,CACpB/H,cAAeiK,EAActK,EAAS,iBACtC+G,cAAeuD,EAActK,EAAS,iBACtCM,SAAUgK,EAActK,EAAS,YACjCO,KAAM+J,EAActK,EAAS,QAC7BmH,OAAQmD,EAActK,EAAS,UAC/BqH,MAAOiD,EAActK,EAAS,SAC9BsH,OAAQgD,EAActK,EAAS,UAC/BuH,QAAS+C,EAActK,EAAS,WAChCwH,cAAe8C,EAActK,EAAS,iBACtCyH,UAAW6C,EAActK,EAAS,aAClC0H,KAAM4C,EAActK,EAAS,QAC7B2H,OAAQ2C,EAActK,EAAS,UAC/B4H,oBAAqB0C,EAActK,EAAS,uBAC5C6H,YAAayC,EAActK,EAAS,eACpC8H,kBAAmBwC,EAActK,EAAS,qBAC1C+H,kBAAmBuC,EAActK,EAAS,qBAC1CgI,iBAAkBsC,EAActK,EAAS,oBACzCiI,iBAAkBqC,EAActK,EAAS,oBACzCkI,aAAcoC,EAActK,EAAS,gBACrCqI,QAASiC,EAActK,EAAS,YAI5BuG,EAAS,CACb,CACEC,MAAO,2DACP/C,GAAI,UAEN,CACE+C,MAAO,qDACP/C,GAAI,SAEN,CACE+C,MAAO,qDACP/C,GAAI,UAEN,CACE+C,MAAO,+EACP/C,GAAI,WAEN,CACE+C,MAAO,yCACP/C,GAAI,iBAEN,CACE+C,MAAO,iEACP/C,GAAI,aAEN,CACE+C,MAAO,0CACP/C,GAAI,QAEN,CACE+C,MAAO,qCACP/C,GAAI,UAEN,CACE+C,MAAO,0GACP/C,GAAI,uBAEN,CACE+C,MAAO,6CACP/C,GAAI,eAEN,CACE+C,MAAO,kDACP/C,GAAI,qBAEN,CACE+C,MAAO,kDACP/C,GAAI,qBAEN,CACE+C,MAAO,iDACP/C,GAAI,oBAEN,CACE+C,MAAO,iDACP/C,GAAI,oBAEN,CACE+C,MAAO,gEACP/C,GAAI,iBAKFgH,EAAmB/D,EAAAA,KAAaC,MAAM,CAC1CtG,cAAeqG,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACTC,SAAS,mHACZC,cAAeL,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACZvG,SAAUoG,EAAAA,KAAaM,UAAU,6EAAiBC,WAClD1G,KAAMmG,EAAAA,KAEHQ,MArHa,CAAC,WAAY,IAAK,KAAM,KAAM,IAAK,KAAM,QAqHrC,+KACjBJ,SAAS,8HACZK,OAAQT,EAAAA,KAELM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIACXC,MAAOX,EAAAA,KAEJM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIACXE,OAAQZ,EAAAA,KAELM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIACXG,QAASb,EAAAA,KAENM,UAAU,6EACVC,SAAS,uJACZO,cAAed,EAAAA,KAEZM,UAAU,6EACVC,SAAS,uJACZQ,UAAWf,EAAAA,KAERM,UAAU,6EACVC,SAAS,uJACTG,QAAQ,qIACXM,KAAMhB,EAAAA,KAEHM,UAAU,6EACVC,SAAS,uJACZU,OAAQjB,EAAAA,KAELM,UAAU,6EACVC,SAAS,uJACZW,oBAAqBlB,EAAAA,KAElBM,UAAU,6EACVC,SAAS,uJACZY,YAAanB,EAAAA,KAEVM,UAAU,6EACVC,SAAS,uJACZa,kBAAmBpB,EAAAA,KAEhBM,UAAU,6EACVC,SAAS,uJACZc,kBAAmBrB,EAAAA,KAEhBM,UAAU,6EACVC,SAAS,uJACZe,iBAAkBtB,EAAAA,KAEfM,UAAU,6EACVC,SAAS,uJACZgB,iBAAkBvB,EAAAA,KAEfM,UAAU,6EACVC,SAAS,uJACZiB,aAAcxB,EAAAA,KAEXE,IAAI,EAAG,wHACPC,IAAI,IAAK,8GA4Bd,OACEtE,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,GAAAA,MAACqC,GAAS,CAAAlE,SAAA,CAAC,kHAAsBV,EAAQK,kBACzCqC,EAAAA,GAAAA,KAACyF,EAAAA,GAAM,CACLC,cAAeA,EACfE,iBAAkBmC,EAClBlC,SA1Be,SAACC,EAAQC,GAC5B,IAAQC,EAAcD,EAAdC,UAGFgC,EAAgB9B,OAAOwB,KAAK5B,GAAQmC,QAAO,SAACC,EAAKC,GAIrD,OAHIrC,EAAOqC,KAASzC,EAAcyC,KAChCD,EAAIC,GAAOrC,EAAOqC,IAEbD,CACT,GAAG,CAAC,GAGJzJ,EAAKsC,EAAIiH,GACTjC,EAAQqC,eAAc,GAGtBpC,IACAxE,GACF,EAQ6BxD,SAEtB,SAACrD,GAAK,OACLkF,EAAAA,GAAAA,MAACiC,GAAU,CAAA9D,SAAA,EACTgC,EAAAA,GAAAA,KAACwG,EAAAA,GAAW,CAACzG,QAASyB,EAAShB,KAAMiG,EAAAA,OAErC5G,EAAAA,GAAAA,MAACnE,GAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,GAAAA,KAACoC,GAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,wKACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnJ,cACbhD,EAAMmL,OAAOnI,kBAGjBqC,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,GAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAInEpH,EAAAA,GAAAA,MAACkD,GAAY,CAAA/E,SAAA,EACXgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,OAAM1I,SAAC,qFACtB6B,EAAAA,GAAAA,MAACwC,EAAAA,GAAK,CACJ6E,GAAI/D,GACJwD,KAAK,OACLlE,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOjJ,KACblD,EAAMmL,OAAOjI,MACbG,SAAA,EAEFgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,GAAGC,UAAQ,EAACC,QAAM,EAAArJ,SAAC,gIAGjCgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,WAAUnJ,SAAC,4DACzBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,OAAMnJ,SAAC,oCACrBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,+EAClBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,2FACnBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,+EACnBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,8BAClBgC,EAAAA,GAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,yDAGrBgC,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,OACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,GAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAGnEpH,EAAAA,GAAAA,MAACkD,GAAY,CAAA/E,SAAA,EACXgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,WAAU1I,SAAC,yDAC1BgC,EAAAA,GAAAA,KAACgD,GAAK,CACJ9G,KAAK,OACL0K,YAAY,2BACZD,KAAK,WACL5F,GAAG,WACH0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOlJ,SACbjD,EAAMmL,OAAOlI,aAGjBoC,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,WACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,GAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAInEjH,EAAAA,GAAAA,KAACO,EAAAA,GAAU,CACTrE,KAAK,SACLwE,WAAW,UACXE,QAAQ,UACRC,QAAS,4HACTL,KACEmD,EACI2D,EAAAA,IACAC,EAAAA,IAENxH,QAAS,WA5GnB6D,GAAqBD,EA4G4B,IAExCA,IACC9D,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,GAAAA,MAACnE,GAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,GAAAA,KAACoC,GAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,wKACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOzC,cACb1J,EAAMmL,OAAOzB,kBAGjBrE,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,GAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAIpDjH,EAAAA,GAAAA,KAACuD,GAAU,CAAAvF,SACR6F,EAAO2D,KAAI,SAAA1E,GAAA,IAAG/B,EAAE+B,EAAF/B,GAAI+C,EAAKhB,EAALgB,MAAK,OACtBjE,EAAAA,GAAAA,MAACkD,GAAY,CAAA/E,SAAA,EACXgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAS3F,EAAG/C,SAAE8F,KACrB9D,EAAAA,GAAAA,KAACgD,GAAK,CACJ9G,KAAK,OACL0K,YAAa9C,EACb6C,KAAM5F,EACNA,GAAIA,EACJ0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAO/F,GACbpG,EAAMmL,OAAO/E,OAGjBf,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAM5F,EACNiG,OAAQ,SAACC,GAAG,OACVjH,EAAAA,GAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,MAfjClG,EAkBJ,OAGnBlB,EAAAA,GAAAA,MAACnE,GAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,GAAAA,KAAA,SAAO0G,QAAQ,UAAS1I,SAAC,sDACzBgC,EAAAA,GAAAA,KAACoC,GAAQ,CACPuE,KAAK,UACL5F,GAAG,UACH6F,YAAY,8FACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnB,QACbhL,EAAMmL,OAAOH,YAGjB3F,EAAAA,GAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,UACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,GAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,WAOxDjH,EAAAA,GAAAA,KAAC0D,GAAa,CAAA1F,UACZgC,EAAAA,GAAAA,KAACyH,EAAAA,GAAM,CACLvL,KAAK,SACLkL,SAAUlB,OAAOwB,KAAK/M,EAAMmM,QAAQa,OAAS,EAAE3J,SAChD,qEAIQ,MAMvB,EC7LA,GAhMqB,SAAfqK,EAAYhL,GAA0B,IAApBiL,EAAKjL,EAALiL,MAAOrK,EAAKZ,EAALY,MAC7BS,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C6J,EAAa3J,EAAA,GAAE4J,EAAgB5J,EAAA,GACtCI,GAAoCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CyJ,EAAUxJ,EAAA,GAAEyJ,EAAazJ,EAAA,GAChCG,GAAsCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7CuJ,EAAWtJ,EAAA,GAAEuJ,EAAcvJ,EAAA,GAClCwJ,GAAkClK,EAAAA,EAAAA,WAAS,GAAMmK,GAAAjK,EAAAA,EAAAA,GAAAgK,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAuCtK,EAAAA,EAAAA,UAAS2J,GAAMY,GAAArK,EAAAA,EAAAA,GAAAoK,EAAA,GAA/CE,EAAWD,EAAA,GAAEE,EAAeF,EAAA,GACnCG,GAAsC1K,EAAAA,EAAAA,WAAS,GAAM2K,GAAAzK,EAAAA,EAAAA,GAAAwK,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,IAGlC3J,EAAAA,EAAAA,YAAU,WACR,IAAM8J,EAAa,IAAIC,gBACG,SAAAC,IAWzB,OAXyBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAC,EAA2BtB,GAAU,IAAAuB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEhB,OAAnBpB,GAAa,GAAMkB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMC,EAAAA,EAAAA,IAAc5B,EAAYgB,EAAWa,QAAQ,KAAD,EAA7DN,EAAQE,EAAAK,KACd/B,EAAiBwB,EAASQ,MAAMN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEhC9J,EAAAA,GAAMsK,MAAM,uMAAuC,QAE/B,OAF+BR,EAAAC,KAAA,GAEnDnB,GAAa,GAAOkB,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEvBJ,EAAAkB,MAAA,KAAAC,UAAA,CAED,GAAKrC,EAKL,OAnByC,SACfsC,GAAApB,EAAAkB,MAAC,KAADC,UAAA,CAgB1BE,CAAYvC,GAEL,WACLgB,EAAWwB,OACb,CACF,GAAG,CAACxC,EAAYE,EAAaH,IAG7B,IAAM1J,GAAQoM,EAAAA,EAAAA,UAAQ,WACpB,OAAI5C,EAAMX,OAAS,GACV/H,EAAAA,EAAAA,IAAY0I,EAAM,GAAGxK,qBAEvB,IACT,GAAG,CAACwK,IAGEvK,EAAc,eAAA+E,GAAA8G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqB,EAAOC,EAAOrK,GAAE,OAAA8I,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACR,SAAzBgB,EAAME,OAAOC,SAA+C,QAAzBH,EAAME,OAAOC,SAClDC,EAAezK,GAChB,wBAAAsK,EAAAT,OAAA,GAAAO,EAAA,KACF,gBAJmBM,EAAAC,GAAA,OAAA5I,EAAA+H,MAAA,KAAAC,UAAA,KAOpB,SAASU,EAAezK,GAEpB2H,EADED,IAAe1H,EACH,KAEAA,EAElB,CAGA,SAAS4K,EAAeC,GACtB,IAAMnC,EAAa,IAAIC,gBACM,SAAAmC,IAQ5B,OAR4BA,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA7B,SAAAgC,EAA8BnD,GAAW,IAAAqB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,GAEd4B,EAAAA,EAAAA,IAAYrD,EAAac,EAAWa,QAAQ,KAAD,EAA5DN,EAAQ+B,EAAAxB,KACdnK,EAAAA,GAAM6L,QAAQ,gJACdrD,EAAeoB,EAASQ,MAAMuB,EAAA3B,KAAA,gBAAA2B,EAAA5B,KAAA,EAAA4B,EAAAtB,GAAAsB,EAAA,SAE9B3L,EAAAA,GAAMsK,MAAM,6JAAgC,yBAAAqB,EAAAnB,OAAA,GAAAkB,EAAA,kBAE/CD,EAAAhB,MAAA,KAAAC,UAAA,CAED,OAXyC,SACZoB,GAAAL,EAAAhB,MAAC,KAADC,UAAA,CAS7Ba,CAAeC,GACR,WACLnC,EAAWwB,OACb,CACF,CAGA,SAASkB,EAAapL,EAAIqL,GACxB,IAAM3C,EAAa,IAAIC,gBACJ,SAAA2C,IAuBlB,OAvBkBA,GAAAzC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAnB,SAAAwC,EAAoBvL,EAAIqL,GAAc,IAAApC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,GAEXoC,EAAAA,EAAAA,IACrBzL,EACAqL,EACA3C,EAAWa,QACX,KAAD,EAJKN,EAAQuC,EAAAhC,KAMdnB,EACED,EAAY3B,KAAI,SAACiF,GACf,OAAIA,EAAKjP,MAAQuD,GACfwF,EAAAA,EAAAA,GAAA,GACKyD,EAASQ,MAGTiC,CACT,KAGFrM,EAAAA,GAAM6L,QAAQ,gJAA6BM,EAAAnC,KAAA,gBAAAmC,EAAApC,KAAA,EAAAoC,EAAA9B,GAAA8B,EAAA,SAE3CnM,EAAAA,GAAMsK,MAAM,uJAA+B,yBAAA6B,EAAA3B,OAAA,GAAA0B,EAAA,kBAE9CD,EAAAxB,MAAA,KAAAC,UAAA,CAED,OA1ByC,SACtB4B,EAAAC,GAAAN,EAAAxB,MAAC,KAADC,UAAA,CAwBnBrM,CAAKsC,EAAIqL,GACF,WACL3C,EAAWwB,OACb,CACF,CAEA,IAAM2B,EAAgB,SAAC7L,GACrByI,EAAezI,EACjB,EAGM8L,EAAgB,WACpBrD,GAAgBD,EAClB,EAG2B,SAAAuD,IAgB1B,OAhB0BA,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA3B,SAAAiD,EAA4BhM,GAAE,IAAAiM,EAAA,OAAAnD,EAAAA,EAAAA,KAAAI,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA9C,KAAA,EAAA8C,EAAA7C,KAAA,GAEL8C,EAAAA,EAAAA,IAAenM,GAAI,KAAD,GAAjCiM,EAAMC,EAAA1C,QAEVnK,EAAAA,GAAMC,KAAK,sJACX+I,EACED,EAAY9C,QACV,SAAC8G,GAAQ,OAAKA,EAAS3P,MAAQwP,EAAOxC,KAAKoB,SAASpO,GAAG,KAG3DgM,GAAe,IAChByD,EAAA7C,KAAA,gBAAA6C,EAAA9C,KAAA,EAAA8C,EAAAxC,GAAAwC,EAAA,SAED7M,EAAAA,GAAMsK,MAAM,8JAAiC,eAAAuC,EAAA9C,KAAA,GAAA8C,EAAAtC,OAAA,6BAAAsC,EAAArC,OAAA,GAAAmC,EAAA,yBAGhDlC,MAAA,KAAAC,UAAA,CAED,OACEjL,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAA9B,SAAA,EACEgC,EAAAA,GAAAA,KAAA,OAAAhC,UACEgC,EAAAA,GAAAA,KAAC0B,EAAI,CAAC5C,MAAOA,EAAMd,SAChBmL,EAAY3B,KAAI,SAACiF,GAAI,OACpBzM,EAAAA,GAAAA,KAAC4B,EAAI,CAAA5D,SAEFyK,IAAegE,EAAKjP,KACnBwC,EAAAA,GAAAA,KAACoN,EAAAA,EAAQ,CACP9P,QAASmP,EACT1O,eAAgB,SAACqN,GAAK,OAAKrN,EAAeqN,EAAOqB,EAAKjP,IAAI,EAC1DS,MAAOA,EACPC,WAAYuK,IAAegE,EAAKjP,IAChCW,aAAcyO,EACdvO,QAASgP,GACT7O,SAAU8O,GACVhP,OAAQqN,EACRlN,KAAM0N,EAAanO,SAElB+K,GACC/I,EAAAA,GAAAA,KAACuN,EAAAA,EAAS,CAACC,MAAM,UAAUC,MAAM,UAEjCzN,EAAAA,GAAAA,KAACqI,EAAY,CAACC,MAAOC,EAAetK,MAAOA,OAI/C+B,EAAAA,GAAAA,KAACoN,EAAAA,EAAQ,CACP9P,QAASmP,EACT1O,eAAgB,SAACqN,GAAK,OAAKrN,EAAeqN,EAAOqB,EAAKjP,IAAI,EAC1DS,MAAOA,EACPE,aAAcyO,EACdvO,QAASgP,GACT7O,SAAU8O,GACVhP,OAAQqN,EACRlN,KAAM0N,KA7BDM,EAAKjP,IAgCT,QAIZ+L,IACCvJ,EAAAA,GAAAA,KAAC0N,EAAAA,EAAO,CAAClM,QAASqL,EAAec,MAAM,qIAA2B3P,UAChE6B,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAA9B,SAAA,EACEgC,EAAAA,GAAAA,KAACyH,EAAAA,GAAM,CAAC1H,QAAS,kBA/D3B,SAC2B6N,GAAA,OAAAd,EAAAjC,MAAC,KAADC,UAAA,CA8DM3M,CAAaoL,EAAY,EAAE/J,KAAK,UAASxB,SAAC,YAGjEgC,EAAAA,GAAAA,KAACyH,EAAAA,GAAM,CAAC1H,QAAS8M,EAAc7O,SAAC,kBAM5C,C,gEC7LA,IAjBsB,SAAHX,GAAqC,IAA/BwQ,EAAOxQ,EAAPwQ,QAAS5P,EAAKZ,EAALY,MAAO2C,EAAOvD,EAAPuD,QACvC,MAAgB,aAAZA,GAEAZ,EAAAA,EAAAA,KAAA,OAAAhC,SACG6P,EAAQlG,OAAS,IAAK3H,EAAAA,EAAAA,KAACqI,EAAAA,EAAY,CAACC,MAAOuF,EAAS5P,MAAOA,MAIlD,YAAZ2C,GAEAZ,EAAAA,EAAAA,KAAA,OAAAhC,SACG6P,EAAQlG,OAAS,IAAK3H,EAAAA,EAAAA,KAAC8N,EAAAA,EAAW,CAACxF,MAAOuF,EAAS5P,MAAOA,WAHjE,CAOF,C,wGCjBa8P,EAAa1T,EAAAA,GAAO2T,KAAIzT,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8MAMlB,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,IAMrCoT,EAAQ5T,EAAAA,GAAOyJ,MAAKpJ,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0BAGpBwI,EAAQ3I,EAAAA,GAAO6T,MAAKnT,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yTAClB,SAACG,GAAK,OAAKA,EAAMC,MAAMY,UAAUC,CAAC,IAIjC,SAACd,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAChC,SAAC7H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IACrC,SAAC7H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQ4L,IAAI,IAClC,SAACxT,GAAK,OAAKA,EAAMC,MAAM2H,QAAQ4L,IAAI,IAGnC,SAACxT,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAChC,SAAC7H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IACrC,SAAC7H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQ4L,IAAI,IAClC,SAACxT,GAAK,OAAKA,EAAMC,MAAM2H,QAAQ4L,IAAI,I,2DC4BvD,EAlDe,SAAH9Q,GAAkD,IAA5C+Q,EAAM/Q,EAAN+Q,OAAQrF,EAAS1L,EAAT0L,UAAWsF,EAAIhR,EAAJgR,KAAMC,EAAWjR,EAAXiR,YACzC5P,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3C6P,EAAW3P,EAAA,GAAE4P,EAAc5P,EAAA,GAO5B6P,EAAe,SAACrD,GACpBA,EAAMsD,iBAEFH,EAAYI,OAAOhH,OAAS,EAC9BvH,EAAAA,GAAMsK,MAAM,kJAEP0D,EAAOG,EAAYI,OAC5B,EAOA,OACE9O,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,EAAAA,MAACkO,EAAU,CAAClI,SAAU4I,EAAazQ,SAAA,EACjCgC,EAAAA,EAAAA,KAAC4O,EAAAA,GAAU,CACTpO,KAAMqO,EAAAA,IACN3S,KAAK,SACL6D,QAXW,WACjByO,EAAe,IACfH,GACF,KAUMrO,EAAAA,EAAAA,KAACiO,EAAK,CAAAjQ,UACJgC,EAAAA,EAAAA,KAACgD,EAAK,CACJ2D,KAAK,SACLzK,KAAK,OACL4S,SA/BW,SAAC1D,GACpB,IAAM2D,EAAkB3D,EAAM4D,cAAc7H,MAAM8H,cAClDT,EAAeO,EACjB,EA6BU5H,MAAOoH,OAGXvO,EAAAA,EAAAA,KAACkP,EAAAA,GAAY,CACX1O,KAAM2O,EAAAA,IACNjT,KAAK,SACL6D,QAAS0O,EACTrH,SAAUkH,OAGbvF,IAAa/I,EAAAA,EAAAA,KAACuN,EAAAA,EAAS,CAACC,MAAM,UAAUC,MAAM,WAGrD,C,iMCtDa/L,EAAOrH,EAAAA,GAAOsH,GAAEpH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oFACZ,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,GAG9BK,EAAAA,IAGL0G,EAAOvH,EAAAA,GAAOwH,GAAEnH,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wHAOR,SAACG,GAAK,OAAKA,EAAMC,MAAMC,MAAM,EAAE,I,gFCdvCiH,GAAazH,EAAAA,EAAAA,IAAO0H,EAAAA,GAAP1H,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uRAWtB,SAACG,GAAK,OAAKA,EAAMC,MAAMoH,QAAQC,IAAI,IAItCC,EAAY7H,EAAAA,GAAO8H,GAAEzH,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAIrBkB,EAAqBrB,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sGAO/B4H,GAAW/H,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAaY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,6gBACf,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAnF,GAAc,OAAAA,EAAXoF,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAQ3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAUhC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IACzB,SAAC7H,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACnD,SAAC3H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IACnC,SAAAC,GAAc,OAAAA,EAAXL,WAA6B,IAKvCM,EAAe1I,EAAAA,GAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uLAWzBwI,GAAQ3I,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAasB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,0bACZ,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAS,GAAc,OAAAA,EAAXR,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAM3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAU,GAAc,OAAAA,EAAXT,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAI1CM,EAAS9I,EAAAA,GAAO+I,OAAMvH,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,saACb,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAa,GAAc,OAAAA,EAAXZ,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAO3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAc,GAAc,OAAAA,EAAXb,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAa1CW,GATanJ,EAAAA,GAAOC,IAAGwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,yIASFH,EAAAA,GAAOC,IAAG0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iFACjC,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOmI,OAAO,IAEjC,SAAC9I,GAAK,OAAKA,EAAMC,MAAMY,UAAUS,CAAC,KAIpCyH,EAAgBrJ,EAAAA,GAAOC,IAAG8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,uD,SCyGvC,GA5NuB,SAAH6C,GAAiC,IAA3BmE,EAAOnE,EAAPmE,QAAST,EAAE1D,EAAF0D,GAAIzC,EAAMjB,EAANiB,OACrCI,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDiF,EAAgB/E,EAAA,GAAEgF,EAAmBhF,EAAA,GAatCwQ,EAAmBpL,EAAAA,KAAaC,MAAM,CAC1CtG,cAAeqG,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACTC,SAAS,mHACZC,cAAeL,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACZvG,SAAUoG,EAAAA,KAAaM,UAAU,6EAAiBC,WAClD1G,KAAMmG,EAAAA,KAEHQ,MAzBa,CAAC,WAAY,IAAK,KAAM,KAAM,IAAK,KAAM,QAyBrC,+KACjBJ,SAAS,8HACZoB,aAAcxB,EAAAA,KAEXE,IAAI,EAAG,wHACPC,IAAI,IAAK,8GA2Bd,OACEtE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACEgC,EAAAA,EAAAA,KAACkC,EAAS,CAAAlE,SAAC,qFACXgC,EAAAA,EAAAA,KAACyF,EAAAA,GAAM,CACLC,cA1DgB,CACpB/H,cAAe,GACf0G,cAAe,GACfzG,SAAU,GACVC,KAAM,GACN2H,aAAc,GACdG,QAAS,IAqDLC,iBAAkBwJ,EAClBvJ,SA9Be,SAACC,EAAQC,GAE5B,IAAQC,EAAcD,EAAdC,UAGFC,EAAiBC,OAAOC,YAC5BD,OAAOE,QAAQN,GAAQO,QAAO,SAAAvD,GAAA,IAAAG,GAAApE,EAAAA,EAAAA,GAAAiE,EAAA,GAAKG,EAAA,GAAO,MAAgB,KAAhBA,EAAA,EAAkB,KAGxDqD,GAAiBC,EAAAA,EAAAA,GAAA,CACrB9I,gBAAiBsD,GACdkF,GAEL3H,EAAOgI,GAEPN,IACAxE,GACF,EAa6BxD,SAEtB,SAACrD,GAAK,OACLkF,EAAAA,EAAAA,MAACiC,EAAU,CAAA9D,SAAA,EACTgC,EAAAA,EAAAA,KAACwG,EAAAA,GAAW,CAACzG,QAASyB,EAAShB,KAAMiG,EAAAA,OACrC5G,EAAAA,EAAAA,MAACnE,EAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,EAAAA,KAACoC,EAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,8KACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnJ,cACbhD,EAAMmL,OAAOnI,kBAGjBqC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,EAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAGnEpH,EAAAA,EAAAA,MAACkD,EAAY,CAAA/E,SAAA,EACXgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,OAAM1I,SAAC,qFACtB6B,EAAAA,EAAAA,MAACwC,EAAAA,GAAK,CACJ6E,GAAI/D,EACJwD,KAAK,OACLlE,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOjJ,KACblD,EAAMmL,OAAOjI,MACbG,SAAA,EAEFgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,GAAGC,UAAQ,EAACC,QAAM,EAAArJ,SAAC,gIAGjCgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,WAAUnJ,SAAC,4DACzBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,OAAMnJ,SAAC,oCACrBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,+EAClBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,2FACnBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,+EACnBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,8BAClBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,yDAGrBgC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,OACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,EAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAGnEpH,EAAAA,EAAAA,MAACkD,EAAY,CAAA/E,SAAA,EACXgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,WAAU1I,SAAC,yDAC1BgC,EAAAA,EAAAA,KAACgD,EAAK,CACJ9G,KAAK,OACL0K,YAAY,2BACZD,KAAK,WACL5F,GAAG,WACH0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOlJ,SACbjD,EAAMmL,OAAOlI,aAGjBoC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,WACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,EAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAGnEjH,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTrE,KAAK,SACLwE,WAAW,UACXE,QAAQ,UACRC,QAAS,4HACTL,KACEmD,EACI2D,EAAAA,IACAC,EAAAA,IAENxH,QAAS,WArFnB6D,GAAqBD,EAqF4B,IAExCA,IACC9D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,EAAAA,MAACnE,EAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,EAAAA,KAACoC,EAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,wKACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOzC,cACb1J,EAAMmL,OAAOzB,kBAGjBrE,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,EAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAIpDpH,EAAAA,EAAAA,MAACkD,EAAY,CAAA/E,SAAA,EACXgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,eAAc1I,SAAC,mEAC9BgC,EAAAA,EAAAA,KAACgD,EAAK,CACJ9G,KAAK,OACL0K,YAAY,gEACZD,KAAK,eACL5F,GAAG,eACH0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOtB,aACb7K,EAAMmL,OAAON,iBAGjBxF,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,WACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,EAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,QAIpDpH,EAAAA,EAAAA,MAACnE,EAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,UAAS1I,SAAC,sDACzBgC,EAAAA,EAAAA,KAACoC,EAAQ,CACPuE,KAAK,UACL5F,GAAG,UACH6F,YAAY,8FACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnB,QACbhL,EAAMmL,OAAOH,YAGjB3F,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,UACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,EAAAA,KAACwD,EAAkB,CAAAxF,SAAEiJ,GAAyB,WAOxDjH,EAAAA,EAAAA,KAAC0D,EAAa,CAAA1F,UACZgC,EAAAA,EAAAA,KAACyH,EAAAA,GAAM,CACLvL,KAAK,SACLkL,SAAUlB,OAAOwB,KAAK/M,EAAMmM,QAAQa,OAAS,EAAE3J,SAChD,6CAIQ,MAKvB,EC7Oa8D,IAAazH,EAAAA,EAAAA,IAAO0H,EAAAA,GAAP1H,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uRAWtB,SAACG,GAAK,OAAKA,EAAMC,MAAMoH,QAAQC,IAAI,IAItCC,GAAY7H,EAAAA,GAAO8H,GAAEzH,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAIrBkB,GAAqBrB,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sGAO/B4H,IAAW/H,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAaY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,6gBACf,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAnF,GAAc,OAAAA,EAAXoF,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAQ3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAUhC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IACzB,SAAC7H,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACnD,SAAC3H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IACnC,SAAAC,GAAc,OAAAA,EAAXL,WAA6B,IAKvCM,GAAe1I,EAAAA,GAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uLAWzBwI,IAAQ3I,EAAAA,EAAAA,IAAOgI,EAAAA,GAAPhI,CAAasB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,0bACZ,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAS,GAAc,OAAAA,EAAXR,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAM3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAU,GAAc,OAAAA,EAAXT,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAI1CM,GAAS9I,EAAAA,GAAO+I,OAAMvH,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,saACb,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOgH,eAAe,IACvD,SAAC3H,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAa,GAAc,OAAAA,EAAXZ,WAA6B,IAC/B,SAAC9H,GAAK,OAAKA,EAAMC,MAAM8H,MAAMC,MAAM,IAO3C,SAAChI,GAAK,OAAKA,EAAMC,MAAMU,OAAOsH,KAAK,IAShC,SAACjI,GAAK,OAAKA,EAAMC,MAAM2H,QAAQC,IAAI,IAC7B,SAAAc,GAAc,OAAAA,EAAXb,WAA6B,IAClC,SAAC9H,GAAK,OAAKA,EAAMC,MAAMoH,QAAQa,MAAM,IAa1CW,IATanJ,EAAAA,GAAOC,IAAGwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,yIASFH,EAAAA,GAAOC,IAAG0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iFACjC,SAACG,GAAK,OAAKA,EAAMC,MAAMU,OAAOmI,OAAO,IAEjC,SAAC9I,GAAK,OAAKA,EAAMC,MAAMY,UAAUS,CAAC,KAIpCyH,GAAgBrJ,EAAAA,GAAOC,IAAG8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,qDCyHvC,GA5OwB,SAAH6C,GAAwC,IAAlCC,EAAOD,EAAPC,QAASkE,EAAOnE,EAAPmE,QAAST,EAAE1D,EAAF0D,GAAItC,EAAIpB,EAAJoB,KAC/CC,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDiF,EAAgB/E,EAAA,GAAEgF,EAAmBhF,EAAA,GAItCgJ,EAAgB,SAACC,EAAKC,GAC1B,OACGD,GACyB,qBAAnBA,EAAIC,IACQ,OAAnBD,EAAIC,GAIGD,EAAIC,GAFJ,EAIX,EAGMpC,EAAgB,CACpB/H,cAAeiK,EAActK,EAAS,iBACtC+G,cAAeuD,EAActK,EAAS,iBACtCM,SAAUgK,EAActK,EAAS,YACjCO,KAAM+J,EAActK,EAAS,QAC7BkI,aAAcoC,EAActK,EAAS,gBACrCqI,QAASiC,EAActK,EAAS,YAG5B8R,EAAmBpL,EAAAA,KAAaC,MAAM,CAC1CtG,cAAeqG,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACTC,SAAS,mHACZC,cAAeL,EAAAA,KAEZE,IAAI,EAAG,wHACPC,IAAI,IAAK,4GACZvG,SAAUoG,EAAAA,KAAaM,UAAU,6EAAiBC,WAClD1G,KAAMmG,EAAAA,KAEHQ,MAtCa,CAAC,WAAY,IAAK,KAAM,KAAM,IAAK,KAAM,QAsCrC,+KACjBJ,SAAS,8HACZoB,aAAcxB,EAAAA,KAEXE,IAAI,EAAG,wHACPC,IAAI,IAAK,8GA8Bd,OACEtE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,EAAAA,MAACqC,GAAS,CAAAlE,SAAA,CAAC,4GAAqBV,EAAQK,kBACxCqC,EAAAA,EAAAA,KAACyF,EAAAA,GAAM,CACLC,cAAeA,EACfE,iBAAkBwJ,EAClBvJ,SA5Be,SAACC,EAAQC,GAE5B,IAAQC,EAAcD,EAAdC,UAGFgC,EAAgB9B,OAAOwB,KAAK5B,GAAQmC,QAAO,SAACC,EAAKC,GAIrD,OAHIrC,EAAOqC,KAASzC,EAAcyC,KAChCD,EAAIC,GAAOrC,EAAOqC,IAEbD,CACT,GAAG,CAAC,GAIJzJ,EAAKsC,EAAIiH,GACTjC,EAAQqC,eAAc,GAGtBpC,IACAxE,GACF,EAQ6BxD,SAEtB,SAACrD,GAAK,OACLkF,EAAAA,EAAAA,MAACiC,GAAU,CAAA9D,SAAA,EACTgC,EAAAA,EAAAA,KAACwG,EAAAA,GAAW,CAACzG,QAASyB,EAAShB,KAAMiG,EAAAA,OACrC5G,EAAAA,EAAAA,MAACnE,GAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,EAAAA,KAACoC,GAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,8KACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnJ,cACbhD,EAAMmL,OAAOnI,kBAGjBqC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,EAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAGnEpH,EAAAA,EAAAA,MAACkD,GAAY,CAAA/E,SAAA,EACXgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,OAAM1I,SAAC,qFACtB6B,EAAAA,EAAAA,MAACwC,EAAAA,GAAK,CACJ6E,GAAI/D,GACJwD,KAAK,OACLlE,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOjJ,KACblD,EAAMmL,OAAOjI,MACbG,SAAA,EAEFgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,GAAGC,UAAQ,EAACC,QAAM,EAAArJ,SAAC,gIAGjCgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,WAAUnJ,SAAC,4DACzBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,OAAMnJ,SAAC,oCACrBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,+EAClBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,2FACnBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,+EACnBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,IAAGnJ,SAAC,8BAClBgC,EAAAA,EAAAA,KAAA,UAAQmH,MAAM,KAAInJ,SAAC,yDAGrBgC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,OACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,EAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAGnEpH,EAAAA,EAAAA,MAACkD,GAAY,CAAA/E,SAAA,EACXgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,WAAU1I,SAAC,yDAC1BgC,EAAAA,EAAAA,KAACgD,GAAK,CACJ9G,KAAK,OACL0K,YAAY,2BACZD,KAAK,WACL5F,GAAG,WACH0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOlJ,SACbjD,EAAMmL,OAAOlI,aAGjBoC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,WACLK,OAAQ,SAACC,GAAG,OAAKjH,EAAAA,EAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAGnEjH,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTrE,KAAK,SACLwE,WAAW,UACXE,QAAQ,UACRC,QAAS,4HACTL,KACEmD,EACI2D,EAAAA,IACAC,EAAAA,IAENxH,QAAS,WA3GnB6D,GAAqBD,EA2G4B,IAExCA,IACC9D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,EAAAA,MAACnE,GAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,gBAAe1I,SAAC,8BAC/BgC,EAAAA,EAAAA,KAACoC,GAAQ,CACPuE,KAAK,gBACL5F,GAAG,gBACH6F,YAAY,wKACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOzC,cACb1J,EAAMmL,OAAOzB,kBAGjBrE,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,gBACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,EAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAIpDpH,EAAAA,EAAAA,MAACkD,GAAY,CAAA/E,SAAA,EACXgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,eAAc1I,SAAC,mEAC9BgC,EAAAA,EAAAA,KAACgD,GAAK,CACJ9G,KAAK,OACL0K,YAAY,gEACZD,KAAK,eACL5F,GAAG,eACH0B,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOtB,aACb7K,EAAMmL,OAAON,iBAGjBxF,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,WACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,EAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,QAIpDpH,EAAAA,EAAAA,MAACnE,GAAkB,CAAAsC,SAAA,EACjBgC,EAAAA,EAAAA,KAAA,SAAO0G,QAAQ,UAAS1I,SAAC,sDACzBgC,EAAAA,EAAAA,KAACoC,GAAQ,CACPuE,KAAK,UACL5F,GAAG,UACH6F,YAAY,8FACZ1K,KAAK,OACLuG,aAAaoE,EAAAA,EAAAA,IACXlM,EAAMmM,OAAOnB,QACbhL,EAAMmL,OAAOH,YAGjB3F,EAAAA,EAAAA,KAAC+G,EAAAA,GAAY,CACXJ,KAAK,UACLK,OAAQ,SAACC,GAAG,OACVjH,EAAAA,EAAAA,KAACwD,GAAkB,CAAAxF,SAAEiJ,GAAyB,WAOxDjH,EAAAA,EAAAA,KAAC0D,GAAa,CAAA1F,UACZgC,EAAAA,EAAAA,KAACyH,EAAAA,GAAM,CACLvL,KAAK,SACLkL,SAAUlB,OAAOwB,KAAK/M,EAAMmM,QAAQa,OAAS,EAAE3J,SAChD,qEAIQ,MAKvB,E,WC7CA,GAhMoB,SAAd8P,EAAWzQ,GAA0B,IAApBiL,EAAKjL,EAALiL,MAAOrK,EAAKZ,EAALY,MAC5BS,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C6J,EAAa3J,EAAA,GAAE4J,EAAgB5J,EAAA,GACtCI,GAAoCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CyJ,EAAUxJ,EAAA,GAAEyJ,EAAazJ,EAAA,GAChCG,GAAoCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3CiQ,EAAUhQ,EAAA,GAAEiQ,EAAajQ,EAAA,GAChCwJ,GAAkClK,EAAAA,EAAAA,WAAS,GAAMmK,GAAAjK,EAAAA,EAAAA,GAAAgK,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAuCtK,EAAAA,EAAAA,UAAS2J,GAAMY,GAAArK,EAAAA,EAAAA,GAAAoK,EAAA,GAA/CE,EAAWD,EAAA,GAAEE,EAAeF,EAAA,GACnCG,GAAsC1K,EAAAA,EAAAA,WAAS,GAAM2K,GAAAzK,EAAAA,EAAAA,GAAAwK,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,IAGlC3J,EAAAA,EAAAA,YAAU,WACR,IAAM8J,EAAa,IAAIC,gBACG,SAAAC,IAczB,OAdyBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAC,EAA2BtB,GAAU,IAAAuB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEhB,OAAnBpB,GAAa,GAAMkB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMmF,EAAAA,EAAAA,IACrB9G,EACAgB,EAAWa,QACX,KAAD,EAHKN,EAAQE,EAAAK,KAId/B,EAAiBwB,EAASQ,MAAMN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEhC9J,EAAAA,GAAMsK,MAAM,uMAAuC,QAE/B,OAF+BR,EAAAC,KAAA,GAEnDnB,GAAa,GAAOkB,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEvBJ,EAAAkB,MAAA,KAAAC,UAAA,CAED,GAAKrC,EAKL,OAtByC,SACfsC,GAAApB,EAAAkB,MAAC,KAADC,UAAA,CAmB1BE,CAAYvC,GAEL,WACLgB,EAAWwB,OACb,CACF,GAAG,CAACxC,EAAY4G,EAAY7G,IAE5B,IAAM1J,GAAQoM,EAAAA,EAAAA,UAAQ,WACpB,OAAI5C,EAAMX,OAAS,GACV/H,EAAAA,EAAAA,IAAY0I,EAAM,GAAGxK,qBAEvB,IACT,GAAG,CAACwK,IAGEvK,EAAc,eAAA+E,GAAA8G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqB,EAAOC,EAAOrK,GAAE,OAAA8I,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACR,SAAzBgB,EAAME,OAAOC,SAA+C,QAAzBH,EAAME,OAAOC,SAClDC,EAAezK,GAChB,wBAAAsK,EAAAT,OAAA,GAAAO,EAAA,KACF,gBAJmBM,EAAAC,GAAA,OAAA5I,EAAA+H,MAAA,KAAAC,UAAA,KAOpB,SAASU,EAAezK,GAGpB2H,EAFED,IAAe1H,EAEH,KAGAA,EAElB,CAGA,SAASyO,EAAcC,GACrB,IAAMhG,EAAa,IAAIC,gBACK,SAAAgG,IAQ3B,OAR2BA,GAAA9F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAAgC,EAA6BuD,GAAU,IAAArF,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,GAEZuF,EAAAA,EAAAA,IAAWN,EAAY5F,EAAWa,QAAQ,KAAD,EAA1DN,EAAQ+B,EAAAxB,KACdnK,EAAAA,GAAM6L,QAAQ,0IACdqD,EAActF,EAASQ,MAAMuB,EAAA3B,KAAA,gBAAA2B,EAAA5B,KAAA,EAAA4B,EAAAtB,GAAAsB,EAAA,SAE7B3L,EAAAA,GAAMsK,MAAM,uJAA+B,yBAAAqB,EAAAnB,OAAA,GAAAkB,EAAA,kBAE9C4D,EAAA7E,MAAA,KAAAC,UAAA,CAED,OAXyC,SACboB,GAAAwD,EAAA7E,MAAC,KAADC,UAAA,CAS5B0E,CAAcC,GACP,WACLhG,EAAWwB,OACb,CACF,CAGA,SAAS2E,EAAY7O,EAAI8O,GACvB,IAAMpG,EAAa,IAAIC,gBACJ,SAAA2C,IAqBlB,OArBkBA,GAAAzC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAnB,SAAAwC,EAAoBvL,EAAI8O,GAAa,IAAA7F,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,GAEV0F,EAAAA,EAAAA,IACrB/O,EACA8O,EACApG,EAAWa,QACX,KAAD,EAJKN,EAAQuC,EAAAhC,KAKdnB,EACED,EAAY3B,KAAI,SAACiF,GACf,OAAIA,EAAKjP,MAAQuD,GACfwF,EAAAA,EAAAA,GAAA,GACKyD,EAASQ,MAGTiC,CACT,KAEFrM,EAAAA,GAAM6L,QAAQ,0IAA4BM,EAAAnC,KAAA,gBAAAmC,EAAApC,KAAA,EAAAoC,EAAA9B,GAAA8B,EAAA,SAE1CnM,EAAAA,GAAMsK,MAAM,iJAA8B,yBAAA6B,EAAA3B,OAAA,GAAA0B,EAAA,kBAE7CD,EAAAxB,MAAA,KAAAC,UAAA,CAED,OAxByC,SACtB4B,EAAAC,GAAAN,EAAAxB,MAAC,KAADC,UAAA,CAsBnBrM,CAAKsC,EAAI8O,GACF,WACLpG,EAAWwB,OACb,CACF,CAEA,IAAM2B,EAAgB,SAAC7L,GACrByI,EAAezI,EACjB,EAGM8L,EAAgB,WACpBrD,GAAgBD,EAClB,EAG2B,SAAAuD,IAgB1B,OAhB0BA,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA3B,SAAAiD,EAA4BhM,GAAE,IAAAiM,EAAA,OAAAnD,EAAAA,EAAAA,KAAAI,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA9C,KAAA,EAAA8C,EAAA7C,KAAA,GAEL2F,EAAAA,EAAAA,GAAchP,GAAI,KAAD,GAAhCiM,EAAMC,EAAA1C,QAEVnK,EAAAA,GAAMC,KAAK,0IACX+I,EACED,EAAY9C,QACV,SAAC8G,GAAQ,OAAKA,EAAS3P,MAAQwP,EAAOxC,KAAKiF,QAAQjS,GAAG,KAG1DgM,GAAe,IAChByD,EAAA7C,KAAA,gBAAA6C,EAAA9C,KAAA,EAAA8C,EAAAxC,GAAAwC,EAAA,SAED7M,EAAAA,GAAMsK,MAAM,wJAAgC,eAAAuC,EAAA9C,KAAA,GAAA8C,EAAAtC,OAAA,6BAAAsC,EAAArC,OAAA,GAAAmC,EAAA,yBAG/ClC,MAAA,KAAAC,UAAA,CAED,OACEjL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACEgC,EAAAA,EAAAA,KAAC0B,EAAI,CAAC5C,MAAOA,EAAMd,SAChBmL,EAAY3B,KAAI,SAACiF,GAAI,OACpBzM,EAAAA,EAAAA,KAAC4B,EAAI,CAAA5D,SAEFyK,IAAegE,EAAKjP,KACnBwC,EAAAA,EAAAA,KAACoN,EAAAA,EAAQ,CACP9P,QAASmP,EACT1O,eAAgB,SAACqN,GAAK,OAAKrN,EAAeqN,EAAOqB,EAAKjP,IAAI,EAC1DS,MAAOA,EACPC,WAAYuK,IAAegE,EAAKjP,IAChCW,aAAcyO,EACdvO,QAAS2R,GACTxR,SAAUyR,GACV3R,OAAQkR,EACR/Q,KAAMmR,EAAY5R,SAEjB+K,GACC/I,EAAAA,EAAAA,KAACuN,EAAAA,EAAS,CAACC,MAAM,UAAUC,MAAM,UAEjCzN,EAAAA,EAAAA,KAAC8N,EAAW,CAACxF,MAAOC,EAAetK,MAAOA,OAI9C+B,EAAAA,EAAAA,KAACoN,EAAAA,EAAQ,CACP9P,QAASmP,EACT1O,eAAgB,SAACqN,GAAK,OAAKrN,EAAeqN,EAAOqB,EAAKjP,IAAI,EAC1DW,aAAcyO,EACd3O,MAAOA,EACPI,QAAS2R,GACTxR,SAAUyR,GACV3R,OAAQkR,EACR/Q,KAAMmR,KA7BDnD,EAAKjP,IAgCT,MAGV+L,IACCvJ,EAAAA,EAAAA,KAAC0N,GAAAA,EAAO,CAAClM,QAASqL,EAAec,MAAM,qIAA2B3P,UAChE6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACEgC,EAAAA,EAAAA,KAACyH,EAAAA,GAAM,CAAC1H,QAAS,kBA7D3B,SAC2B6N,GAAA,OAAAd,EAAAjC,MAAC,KAADC,UAAA,CA4DM3M,CAAaoL,EAAY,EAAE/J,KAAK,UAASxB,SAAC,YAGjEgC,EAAAA,EAAAA,KAACyH,EAAAA,GAAM,CAAC1H,QAAS8M,EAAc7O,SAAC,kBAM5C,C","sources":["components/Category/Category.styled.js","components/Category/Category.jsx","components/MaterialList/MaterialList.styled.js","components/AddMaterialForm/AddMaterialForm.styled.js","components/AddMaterialForm/AddMaterialForm.jsx","components/EditMaterialForm/EditMaterialForm.styled.js","components/EditMaterialForm/EditMaterialForm.jsx","components/MaterialList/MaterialList.jsx","components/SearchResults/SearchResults.jsx","components/Search/Search.styled.js","components/Search/Search.jsx","components/ServiceList/ServiceList.styled.js","components/AddServiceForm/AddServiceForm.styled.js","components/AddServiceForm/AddServiceForm.jsx","components/EditServiceForm/EditServiceForm.styled.js","components/EditServiceForm/EditServiceForm.jsx","components/ServiceList/ServiceList.jsx"],"sourcesContent":["import styled, { keyframes } from \"styled-components\";\r\nimport { setBgColor } from \"../../services\";\r\n\r\nexport const ItemMenu = styled.div`\r\n  /* outline: 1px solid tomato; */\r\n  position: absolute;\r\n  display: flex;\r\n  transition: opacity 0.3s ease; /* Плавна анімація зміни прозорості */\r\n  opacity: 1; /* Початкова прозорість */\r\n  top: 0;\r\n  right: 0;\r\n\r\n  @media screen and (min-width: 680px) {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: var(--materialColorAlfa);\r\n  /* outline: 1px solid tomato; */\r\n  margin-bottom: ${(props) => props.theme.space[2]}px;\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: var(--card-shadow);\r\n    background-color: white;\r\n\r\n    /* Зміна прозорості у ItemMenu при ховері на Card */\r\n    & ${ItemMenu} {\r\n      opacity: 1; /* Нове значення прозорості */\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CategoryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: start;\r\n  border-radius: 5px;\r\n\r\n  width: 100%;\r\n\r\n  /* outline: 1px solid blue; */\r\n\r\n  @media screen and (min-width: 680px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const CodeWrapper = styled.div`\r\n  position: relative;\r\n  text-align: start;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: ${setBgColor};\r\n  border-radius: 0 5px 5px 0px;\r\n  justify-content: end;\r\n\r\n  @media screen and (min-width: 680px) {\r\n    /* display: flex; */\r\n    width: auto;\r\n    text-align: start;\r\n  }\r\n`;\r\n\r\nexport const CategoryCode = styled.p`\r\n  padding: ${(props) => props.theme.space[2]}px;\r\n  padding-left: ${(props) => props.theme.space[5]}px;\r\n  padding-right: ${(props) => props.theme.space[3]}px;\r\n  border-radius: 0 5px 5px 0px;\r\n  display: inline-block;\r\n  min-width: 90px;\r\n  text-align: center;\r\n  color: ${(props) => props.theme.colors.textWhiteColor};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  @media screen and (min-width: 680px) {\r\n    padding-left: ${(props) => props.theme.space[3]}px;\r\n  }\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  padding: ${(props) => props.theme.space[2]}px;\r\n  /* outline: 1px solid red; */\r\n  position: relative;\r\n`;\r\n\r\nexport const CopyParent = styled.div`\r\n  /* position: relative; */\r\n  /* outline: 1px solid green; */\r\n`;\r\n\r\nexport const CategoryDescription = styled.p`\r\n  padding-left: 30px;\r\n  line-height: 1;\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n`;\r\nexport const HilightDescription = styled.div`\r\n  padding-left: 30px;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  background-color: ${(props) => props.type === \"mark\" && \"yellow\"};\r\n`;\r\n\r\nexport const MaterialPrice = styled.p`\r\n  font-size: 12px;\r\n  color: ${(props) => props.theme.colors.green};\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const UserPrice = styled.p`\r\n  font-size: 12px;\r\n  color: ${(props) => props.theme.colors.orange};\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const MaterialUnit = styled.p`\r\n  font-size: 12px;\r\n  color: var(--unit-color);\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const Extended = styled.div`\r\n  line-height: 1;\r\n  /* outline: 1px red solid; */\r\n  padding-left: 24px;\r\n  display: flex;\r\n`;\r\n// Можна отримати доступ до пропсів\r\n//  ${(props) => {\r\n//     console.log(props);\r\n//   }}\r\n\r\n// Так можна додати зображення на фон\r\n// background-image: ${props => `url(${props.img})`}\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst expandHeight = keyframes`\r\nfrom {\r\n    max-height: 0;\r\n  }\r\n  to {\r\n    max-height: 1000px; \r\n  }\r\n`;\r\n\r\nexport const SubList = styled.div`\r\n  /* animation: 2s ${fadeIn} ease-in; */\r\n  animation: ${expandHeight} 0.5s ease-in-out;\r\n  /* overflow: hidden; */\r\n`;\r\n\r\nexport const Animation = styled.div`\r\n  &.fade-enter {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n  }\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\r\n  }\r\n\r\n  /* Використання спеціальних імен класів для анімації зникнення */\r\n  &.fade-exit {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { authContext as context } from \"../../context/authContext\";\r\nimport { createLevel } from \"../../services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IconButton } from \"../Button/Button\";\r\nimport { IoIosCopy } from \"react-icons/io\";\r\nimport { MdModeEditOutline } from \"react-icons/md\";\r\nimport { FaSquarePlus } from \"react-icons/fa6\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { hiLight } from \"../../services\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n// import { IoCheckbox } from \"react-icons/io5\";\r\nimport {\r\n  CategoryWrapper,\r\n  CategoryCode,\r\n  CategoryDescription,\r\n  HilightDescription,\r\n  CodeWrapper,\r\n  DescriptionWrapper,\r\n  MaterialPrice,\r\n  MaterialUnit,\r\n  Extended,\r\n  SubList,\r\n  Card,\r\n  ItemMenu,\r\n  Animation,\r\n} from \"./Category.styled\";\r\n\r\n// Компонент рендерить розмітку категорії і вкладені списки\r\nconst Category = ({\r\n  element,\r\n  element: {\r\n    _id,\r\n    ParentElementId,\r\n    Code,\r\n    DescriptionUA,\r\n    PriceUAH,\r\n    Unit,\r\n    ElementNestingLevel,\r\n  },\r\n  selectCategory,\r\n  children,\r\n  query,\r\n  isSelected,\r\n  handleDelete,\r\n  addForm: AddForm,\r\n  create,\r\n  editForm: EditForm,\r\n  edit,\r\n}) => {\r\n  const [level, setLevel] = useState(null);\r\n  const [addFormVisible, setAddFormVisible] = useState(false);\r\n  const [editFormVisible, setEditFormVisible] = useState(false);\r\n  const { role } = useContext(context);\r\n\r\n  useEffect(() => {\r\n    setLevel(createLevel(ElementNestingLevel));\r\n  }, [ElementNestingLevel]);\r\n\r\n  // Відкриття-закриття форми додавання\r\n  function toggleAddForm(id) {\r\n    if (addFormVisible === id) {\r\n      setAddFormVisible(null);\r\n    } else {\r\n      setAddFormVisible(id);\r\n    }\r\n  }\r\n  // Відкриття-закриття форми редагування\r\n  function toggleEditeForm(id) {\r\n    if (editFormVisible === id) {\r\n      setEditFormVisible(null);\r\n    } else {\r\n      setEditFormVisible(id);\r\n    }\r\n  }\r\n\r\n  // Закриття форми додавання\r\n  function closeAddForm() {\r\n    setAddFormVisible(null);\r\n  }\r\n  // Закриття форми редагування\r\n  function closeEditForm() {\r\n    setEditFormVisible(null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card onClick={selectCategory}>\r\n        <CategoryWrapper level={level}>\r\n          <CodeWrapper level={level}>\r\n            <CopyToClipboard\r\n              text={Code}\r\n              onCopy={() =>\r\n                toast.info(`Код ${Code} скопійовано в буфер омбіну`)\r\n              }\r\n            >\r\n              <IconButton\r\n                icon={IoIosCopy}\r\n                visibility=\"hide\"\r\n                position=\"absolute\"\r\n                variant=\"light\"\r\n                tooltip=\"Копіювати\"\r\n              />\r\n            </CopyToClipboard>\r\n            <CategoryCode>{Code}</CategoryCode>\r\n          </CodeWrapper>\r\n\r\n          <DescriptionWrapper>\r\n            {query ? (\r\n              <div>\r\n                <HilightDescription>\r\n                  {hiLight(query, DescriptionUA)}\r\n                </HilightDescription>\r\n                <CopyToClipboard\r\n                  text={DescriptionUA}\r\n                  onCopy={() =>\r\n                    toast.info(`${DescriptionUA} скопійовано в буфер омбіну`)\r\n                  }\r\n                >\r\n                  <IconButton\r\n                    icon={IoIosCopy}\r\n                    visibility=\"hide\"\r\n                    position=\"absolute\"\r\n                    variant=\"dark\"\r\n                    tooltip=\"Копіювати\"\r\n                  />\r\n                </CopyToClipboard>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <CopyToClipboard\r\n                  text={DescriptionUA}\r\n                  onCopy={() =>\r\n                    toast.info(`${DescriptionUA} скопійовано в буфер омбіну`)\r\n                  }\r\n                >\r\n                  <IconButton\r\n                    icon={IoIosCopy}\r\n                    visibility=\"hide\"\r\n                    position=\"absolute\"\r\n                    variant=\"dark\"\r\n                    tooltip=\"Копіювати\"\r\n                  ></IconButton>\r\n                </CopyToClipboard>\r\n                <CategoryDescription>{DescriptionUA}</CategoryDescription>\r\n              </div>\r\n            )}\r\n            <Extended>\r\n              {Unit && Unit !== \"category\" && (\r\n                <MaterialUnit>Одиниця виміру: {Unit}</MaterialUnit>\r\n              )}\r\n              {/* {Unit && Unit === \"category\" && <IoCheckbox />} */}\r\n              {PriceUAH && (\r\n                <MaterialPrice>Ціна: {PriceUAH} &#8372;</MaterialPrice>\r\n              )}\r\n            </Extended>\r\n          </DescriptionWrapper>\r\n        </CategoryWrapper>\r\n\r\n        {role === \"admin\" && (\r\n          <ItemMenu>\r\n            <IconButton\r\n              id=\"add\"\r\n              icon={FaSquarePlus}\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip=\"Додати\"\r\n              onClick={() => toggleAddForm(_id)}\r\n            ></IconButton>\r\n            <IconButton\r\n              icon={MdModeEditOutline}\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip=\"Редагувати\"\r\n              onClick={() => toggleEditeForm(_id)}\r\n            ></IconButton>\r\n            <IconButton\r\n              icon={MdDelete}\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip=\"Видалити\"\r\n              onClick={() => handleDelete(_id)}\r\n            ></IconButton>\r\n          </ItemMenu>\r\n        )}\r\n      </Card>\r\n\r\n      <TransitionGroup>\r\n        {addFormVisible && (\r\n          <CSSTransition\r\n            // in={addFormVisible}\r\n            classNames=\"fade\"\r\n            timeout={300}\r\n            unmountOnExit\r\n          >\r\n            <Animation>\r\n              <AddForm\r\n                id={_id}\r\n                Code={Code}\r\n                ParentElementId={ParentElementId}\r\n                onClose={() => closeAddForm()}\r\n                create={create}\r\n                element={element}\r\n              />\r\n            </Animation>\r\n          </CSSTransition>\r\n        )}\r\n\r\n        {editFormVisible && (\r\n          <CSSTransition\r\n            in={editFormVisible}\r\n            classNames=\"fade\"\r\n            timeout={300}\r\n            unmountOnExit\r\n          >\r\n            <Animation>\r\n              <EditForm\r\n                id={_id}\r\n                Code={Code}\r\n                ParentElementId={ParentElementId}\r\n                onClose={() => closeEditForm()}\r\n                edit={edit}\r\n                element={element}\r\n              />\r\n            </Animation>\r\n          </CSSTransition>\r\n        )}\r\n\r\n        {isSelected && (\r\n          <CSSTransition\r\n            // in={children}\r\n            classNames=\"fade\"\r\n            timeout={300}\r\n            unmountOnExit\r\n          >\r\n            <Animation>\r\n              <SubList>{children}</SubList>\r\n            </Animation>\r\n          </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import styled from \"styled-components\";\r\nimport { setBgColor } from \"../../services\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: ${(props) => props.theme.space[3]}px;\r\n\r\n  border-left: 2px solid;\r\n  border-color: ${setBgColor};\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:hover,\r\n  &:focus {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: ${(props) => props.theme.space[1]}px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../Button/Button\";\r\nimport { CloseButton } from \"../Button/Button\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  InputGroup,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./AddMaterialForm.styled\";\r\n\r\nconst AddMaterialForm = ({ onClose, id, create }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Початкові значення\r\n  const initialValues = {\r\n    DescriptionUA: \"\",\r\n    DescriptionEN: \"\",\r\n    PriceUAH: \"\",\r\n    Unit: \"\",\r\n    Length: \"\",\r\n    Width: \"\",\r\n    Height: \"\",\r\n    Density: \"\",\r\n    WeightElement: \"\",\r\n    Perimeter: \"\",\r\n    Area: \"\",\r\n    Volume: \"\",\r\n    WriteOffCoefficient: \"\",\r\n    Consumption: \"\",\r\n    ConsumptionPer1m2: \"\",\r\n    ConsumptionPer1m3: \"\",\r\n    ConsumptionPer1m: \"\",\r\n    ConsumptionPer1t: \"\",\r\n    OwnerBarcode: \"\",\r\n    Comment: \"\",\r\n  };\r\n\r\n  // Масив для рендеру інпутів\r\n  const inputs = [\r\n    {\r\n      label: \"Довжина, мм\",\r\n      id: \"Length\",\r\n    },\r\n    {\r\n      label: \"Ширина, мм\",\r\n      id: \"Width\",\r\n    },\r\n    {\r\n      label: \"Висота, мм\",\r\n      id: \"Height\",\r\n    },\r\n    {\r\n      label: \"Щільність, кг/м3\",\r\n      id: \"Density\",\r\n    },\r\n    {\r\n      label: \"Вага, кг\",\r\n      id: \"WeightElement\",\r\n    },\r\n    {\r\n      label: \"Периметр, мм\",\r\n      id: \"Perimeter\",\r\n    },\r\n    {\r\n      label: \"Площа, м2\",\r\n      id: \"Area\",\r\n    },\r\n    {\r\n      label: \"Об'єм, м3\",\r\n      id: \"Volume\",\r\n    },\r\n    {\r\n      label: \"Коефіціент витрати\",\r\n      id: \"WriteOffCoefficient\",\r\n    },\r\n    {\r\n      label: \"Витрата\",\r\n      id: \"Consumption\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m2\",\r\n      id: \"ConsumptionPer1m2\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m3\",\r\n      id: \"ConsumptionPer1m3\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m\",\r\n      id: \"ConsumptionPer1m\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/t\",\r\n      id: \"ConsumptionPer1t\",\r\n    },\r\n    {\r\n      label: \"Власний код\",\r\n      id: \"OwnerBarcode\",\r\n    },\r\n  ];\r\n\r\n  // Схема валідації\r\n  const addMaterialSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    Length: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Width: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n\r\n    Height: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Density: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WeightElement: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Perimeter: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Area: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Volume: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WriteOffCoefficient: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Consumption: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m2: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m3: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1t: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    // formik метод очистки форми\r\n    const { resetForm } = actions;\r\n\r\n    // фільтрація заповнених полів\r\n    const filteredValues = Object.fromEntries(\r\n      Object.entries(values).filter(([key, value]) => value !== \"\")\r\n    );\r\n\r\n    const additionalElement = {\r\n      ParentElementId: id,\r\n      ...filteredValues,\r\n    };\r\n\r\n    create(additionalElement);\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Додати матеріал</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addMaterialSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введіть опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputGroup>\r\n                  {inputs.map(({ id, label }) => (\r\n                    <InputWrapper key={id}>\r\n                      <label htmlFor={id}>{label}</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder={label}\r\n                        name={id}\r\n                        id={id}\r\n                        bordercolor={validationColor(\r\n                          props.errors[id],\r\n                          props.values[id]\r\n                        )}\r\n                      />\r\n                      <ErrorMessage\r\n                        name={id}\r\n                        render={(msg) => (\r\n                          <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                        )}\r\n                      />\r\n                    </InputWrapper>\r\n                  ))}\r\n                </InputGroup>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Додати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n      {/* {isLoading && <BarLoader color=\"#125b56\" width=\"100%\" />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMaterialForm;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../../components/Button/Button\";\r\nimport { CloseButton } from \"../../components/Button/Button\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  InputGroup,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./EditMaterialForm.styled\";\r\n\r\nconst EditMaterialForm = ({ element, onClose, id, edit }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Функція, що перевіряє значення на undefined і встановлює пустий рядок в разі потреби\r\n  const getFieldValue = (obj, fieldName) => {\r\n    if (\r\n      !obj ||\r\n      typeof obj[fieldName] === \"undefined\" ||\r\n      obj[fieldName] === null\r\n    ) {\r\n      return \"\";\r\n    } else {\r\n      return obj[fieldName];\r\n    }\r\n  };\r\n\r\n  // Створення об'єкта initialValues на основі element з пустими значеннями для undefined полів\r\n  const initialValues = {\r\n    DescriptionUA: getFieldValue(element, \"DescriptionUA\"),\r\n    DescriptionEN: getFieldValue(element, \"DescriptionEN\"),\r\n    PriceUAH: getFieldValue(element, \"PriceUAH\"),\r\n    Unit: getFieldValue(element, \"Unit\"),\r\n    Length: getFieldValue(element, \"Length\"),\r\n    Width: getFieldValue(element, \"Width\"),\r\n    Height: getFieldValue(element, \"Height\"),\r\n    Density: getFieldValue(element, \"Density\"),\r\n    WeightElement: getFieldValue(element, \"WeightElement\"),\r\n    Perimeter: getFieldValue(element, \"Perimeter\"),\r\n    Area: getFieldValue(element, \"Area\"),\r\n    Volume: getFieldValue(element, \"Volume\"),\r\n    WriteOffCoefficient: getFieldValue(element, \"WriteOffCoefficient\"),\r\n    Consumption: getFieldValue(element, \"Consumption\"),\r\n    ConsumptionPer1m2: getFieldValue(element, \"ConsumptionPer1m2\"),\r\n    ConsumptionPer1m3: getFieldValue(element, \"ConsumptionPer1m3\"),\r\n    ConsumptionPer1m: getFieldValue(element, \"ConsumptionPer1m\"),\r\n    ConsumptionPer1t: getFieldValue(element, \"ConsumptionPer1t\"),\r\n    OwnerBarcode: getFieldValue(element, \"OwnerBarcode\"),\r\n    Comment: getFieldValue(element, \"Comment\"),\r\n  };\r\n\r\n  // Масив для рендеру інпутів\r\n  const inputs = [\r\n    {\r\n      label: \"Довжина, мм\",\r\n      id: \"Length\",\r\n    },\r\n    {\r\n      label: \"Ширина, мм\",\r\n      id: \"Width\",\r\n    },\r\n    {\r\n      label: \"Висота, мм\",\r\n      id: \"Height\",\r\n    },\r\n    {\r\n      label: \"Щільність, кг/м3\",\r\n      id: \"Density\",\r\n    },\r\n    {\r\n      label: \"Вага, кг\",\r\n      id: \"WeightElement\",\r\n    },\r\n    {\r\n      label: \"Периметр, мм\",\r\n      id: \"Perimeter\",\r\n    },\r\n    {\r\n      label: \"Площа, м2\",\r\n      id: \"Area\",\r\n    },\r\n    {\r\n      label: \"Об'єм, м3\",\r\n      id: \"Volume\",\r\n    },\r\n    {\r\n      label: \"Коефіціент витрати\",\r\n      id: \"WriteOffCoefficient\",\r\n    },\r\n    {\r\n      label: \"Витрата\",\r\n      id: \"Consumption\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m2\",\r\n      id: \"ConsumptionPer1m2\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m3\",\r\n      id: \"ConsumptionPer1m3\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m\",\r\n      id: \"ConsumptionPer1m\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/t\",\r\n      id: \"ConsumptionPer1t\",\r\n    },\r\n    {\r\n      label: \"Власний код\",\r\n      id: \"OwnerBarcode\",\r\n    },\r\n  ];\r\n\r\n  // Схема валідації\r\n  const addElementSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    Length: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Width: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Height: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Density: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WeightElement: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Perimeter: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Area: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Volume: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WriteOffCoefficient: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Consumption: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m2: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m3: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1t: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    const { resetForm } = actions;\r\n\r\n    // перебирає ключі отримані із форми і перевіряє чи є вони у об'єкта який редагується, якщо немає то додає\r\n    const changedValues = Object.keys(values).reduce((acc, key) => {\r\n      if (values[key] !== initialValues[key]) {\r\n        acc[key] = values[key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    // Відправка даних у верхній компонент\r\n    edit(id, changedValues);\r\n    actions.setSubmitting(false); // Позначити, що обробка завершена\r\n\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Редагувати матеріал: {element.DescriptionUA}</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addElementSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введіть опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputGroup>\r\n                  {inputs.map(({ id, label }) => (\r\n                    <InputWrapper key={id}>\r\n                      <label htmlFor={id}>{label}</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder={label}\r\n                        name={id}\r\n                        id={id}\r\n                        bordercolor={validationColor(\r\n                          props.errors[id],\r\n                          props.values[id]\r\n                        )}\r\n                      />\r\n                      <ErrorMessage\r\n                        name={id}\r\n                        render={(msg) => (\r\n                          <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                        )}\r\n                      />\r\n                    </InputWrapper>\r\n                  ))}\r\n                </InputGroup>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Редагувати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n      {/* {isLoading && <BarLoader color=\"#125b56\" width=\"100%\" />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditMaterialForm;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\n// functions\r\nimport {\r\n  addMaterial,\r\n  updateMaterial,\r\n  getByParentId,\r\n  removeMaterial,\r\n} from \"../../services\";\r\nimport { createLevel } from \"../../services\";\r\n// components\r\nimport Category from \"../Category/Category\";\r\nimport { List, Item } from \"./MaterialList.styled\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport { Button } from \"../Button/Button\";\r\nimport Confirm from \"../Confirm/Confirm\";\r\nimport AddMaterialForm from \"../AddMaterialForm/AddMaterialForm\";\r\nimport EditMaterialForm from \"../EditMaterialForm/EditMaterialForm\";\r\n\r\nconst MaterialList = ({ items, query }) => {\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [newMaterial, setNewMaterial] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [curentItems, setCurrentItems] = useState(items);\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n\r\n  // Запит по під категорії\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    async function subCategory(selectedId) {\r\n      // console.log(\"get subcategory effect\");\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await getByParentId(selectedId, controller.signal);\r\n        setSubCategories(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось завантажити підкагеторії\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    if (!selectedId) {\r\n      return;\r\n    }\r\n    subCategory(selectedId);\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [selectedId, newMaterial, setSubCategories]);\r\n\r\n  // Створення класів для кольорів\r\n  const level = useMemo(() => {\r\n    if (items.length > 0) {\r\n      return createLevel(items[0].ElementNestingLevel);\r\n    }\r\n    return null;\r\n  }, [items]);\r\n\r\n  // Функція  тоглить відкриття категорії\r\n  const selectCategory = async (event, id) => {\r\n    if (event.target.tagName !== \"path\" && event.target.tagName !== \"svg\") {\r\n      toggleCategory(id);\r\n    }\r\n  };\r\n\r\n  // Відкриття-закриття категорії\r\n  function toggleCategory(id) {\r\n    if (selectedId === id) {\r\n      setSelectedId(null);\r\n    } else {\r\n      setSelectedId(id);\r\n    }\r\n  }\r\n\r\n  // Створення матеріалу\r\n  function createMaterial(material) {\r\n    const controller = new AbortController();\r\n    async function createMaterial(newMaterial) {\r\n      try {\r\n        const response = await addMaterial(newMaterial, controller.signal);\r\n        toast.success(\"Матеріал успішно створено\");\r\n        setNewMaterial(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось створити матеріал\");\r\n      }\r\n    }\r\n    createMaterial(material);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n\r\n  // Редагування матеріалу\r\n  function editMaterial(id, editedMaterial) {\r\n    const controller = new AbortController();\r\n    async function edit(id, editedMaterial) {\r\n      try {\r\n        const response = await updateMaterial(\r\n          id,\r\n          editedMaterial,\r\n          controller.signal\r\n        );\r\n        // console.log(\"response: \", response);\r\n        setCurrentItems(\r\n          curentItems.map((item) => {\r\n            if (item._id === id) {\r\n              return {\r\n                ...response.data,\r\n              };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n        // console.log(\"response.data: \", response.data);\r\n        toast.success(\"Матеріал успішно оновлено\");\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось оновити матеріал\");\r\n      }\r\n    }\r\n    edit(id, editedMaterial);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n  // Відкриття меню підтвердження\r\n  const confirmDelete = (id) => {\r\n    setConfirmOpen(id);\r\n  };\r\n\r\n  // Тогл меню підтвердження\r\n  const toggleConfirm = () => {\r\n    setConfirmOpen(!confirmOpen);\r\n  };\r\n\r\n  // Видалення матеріалу\r\n  async function handleDelete(id) {\r\n    try {\r\n      const result = await removeMaterial(id);\r\n      if (result) {\r\n        toast.info(\"Матеріал успішно видалений\");\r\n        setCurrentItems(\r\n          curentItems.filter(\r\n            (category) => category._id !== result.data.material._id\r\n          )\r\n        );\r\n        setConfirmOpen(false);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Не вдалось видалити  матеріал\");\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <List level={level}>\r\n          {curentItems.map((item) => (\r\n            <Item key={item._id}>\r\n              {/* якщо вибраний елемент */}\r\n              {selectedId === item._id ? (\r\n                <Category\r\n                  element={item}\r\n                  selectCategory={(event) => selectCategory(event, item._id)}\r\n                  query={query}\r\n                  isSelected={selectedId === item._id}\r\n                  handleDelete={confirmDelete}\r\n                  addForm={AddMaterialForm}\r\n                  editForm={EditMaterialForm}\r\n                  create={createMaterial}\r\n                  edit={editMaterial}\r\n                >\r\n                  {isLoading ? (\r\n                    <BarLoader color=\"#125b56\" width=\"100%\" />\r\n                  ) : (\r\n                    <MaterialList items={subCategories} query={query} />\r\n                  )}\r\n                </Category>\r\n              ) : (\r\n                <Category\r\n                  element={item}\r\n                  selectCategory={(event) => selectCategory(event, item._id)}\r\n                  query={query}\r\n                  handleDelete={confirmDelete}\r\n                  addForm={AddMaterialForm}\r\n                  editForm={EditMaterialForm}\r\n                  create={createMaterial}\r\n                  edit={editMaterial}\r\n                ></Category>\r\n              )}\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      {confirmOpen && (\r\n        <Confirm onClose={toggleConfirm} title=\"Ви точно хочете видалити?\">\r\n          <>\r\n            <Button onClick={() => handleDelete(confirmOpen)} role=\"warning\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={toggleConfirm}>Cancel</Button>\r\n          </>\r\n        </Confirm>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MaterialList;\r\n","import React from \"react\";\r\nimport MaterialList from \"../MaterialList/MaterialList\";\r\nimport ServiceList from \"../ServiceList/ServiceList\";\r\n\r\nconst SearchResults = ({ results, query, variant }) => {\r\n  if (variant === \"material\") {\r\n    return (\r\n      <div>\r\n        {results.length > 0 && <MaterialList items={results} query={query} />}\r\n      </div>\r\n    );\r\n  }\r\n  if (variant === \"service\") {\r\n    return (\r\n      <div>\r\n        {results.length > 0 && <ServiceList items={results} query={query} />}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchResults;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyled = styled.form`\r\n  padding-top: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-bottom: ${(props) => props.theme.space[2]}px;\r\n  @media screen and (min-width: 680px) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n`;\r\nexport const Input = styled.input`\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  width: 100%;\r\n  padding: 6px;\r\n  box-sizing: border-box;\r\n  border-top: ${(props) => props.theme.borders.bold};\r\n  border-bottom: ${(props) => props.theme.borders.bold};\r\n  border-left: ${(props) => props.theme.borders.none};\r\n  border-right: ${(props) => props.theme.borders.none};\r\n  text-decoration: none;\r\n  &:focus {\r\n    border-top: ${(props) => props.theme.borders.bold};\r\n    border-bottom: ${(props) => props.theme.borders.bold};\r\n    border-left: ${(props) => props.theme.borders.none};\r\n    border-right: ${(props) => props.theme.borders.none};\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { FormStyled, Input, Label } from \"./Search.styled\";\r\nimport { SearchButton, BackButton } from \"../Button/Button\";\r\n\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport { IoMdBackspace } from \"react-icons/io\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BarLoader } from \"react-spinners\";\r\n\r\nconst Search = ({ submit, isLoading, back, isSubmiting }) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const normalizedQuery = event.currentTarget.value.toLowerCase();\r\n    setSearchValue(normalizedQuery);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (searchValue.trim().length < 1) {\r\n      toast.error(\"Введіть запит в поле пошуку\");\r\n      return;\r\n    } else submit(searchValue.trim());\r\n  };\r\n\r\n  const clearQuery = () => {\r\n    setSearchValue(\"\");\r\n    back();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormStyled onSubmit={handleSubmit}>\r\n        <BackButton\r\n          icon={IoMdBackspace}\r\n          type=\"button\"\r\n          onClick={clearQuery}\r\n        ></BackButton>\r\n        <Label>\r\n          <Input\r\n            name=\"search\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={searchValue}\r\n          ></Input>\r\n        </Label>\r\n        <SearchButton\r\n          icon={IoSearch}\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n          disabled={isSubmiting}\r\n        ></SearchButton>\r\n      </FormStyled>\r\n      {isLoading && <BarLoader color=\"#125b56\" width=\"100%\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\nimport { setBgColor } from \"../../services\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: ${(props) => props.theme.space[3]}px;\r\n\r\n  border-left: 2px solid;\r\n  border-color: ${setBgColor};\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:hover,\r\n  &:focus {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: ${(props) => props.theme.space[1]}px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../Button/Button\";\r\nimport { CloseButton } from \"../Button/Button\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport { CgClose } from \"react-icons/cg\";\r\n\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./AddServiceForm.styled\";\r\n\r\nconst AddServiceForm = ({ onClose, id, create }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Початкові значення\r\n  const initialValues = {\r\n    DescriptionUA: \"\",\r\n    DescriptionEN: \"\",\r\n    PriceUAH: \"\",\r\n    Unit: \"\",\r\n    OwnerBarcode: \"\",\r\n    Comment: \"\",\r\n  };\r\n  // Схема валідації\r\n  const addServiceSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    // formik метод очистки форми\r\n    const { resetForm } = actions;\r\n\r\n    // фільтрація заповнених полів\r\n    const filteredValues = Object.fromEntries(\r\n      Object.entries(values).filter(([key, value]) => value !== \"\")\r\n    );\r\n\r\n    const additionalElement = {\r\n      ParentElementId: id,\r\n      ...filteredValues,\r\n    };\r\n    create(additionalElement);\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Додати послугу</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addServiceSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введість опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputWrapper>\r\n                  <label htmlFor=\"OwnerBarcode\">Власний код</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Власний код\"\r\n                    name=\"OwnerBarcode\"\r\n                    id=\"OwnerBarcode\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.OwnerBarcode,\r\n                      props.values.OwnerBarcode\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"PriceUAH\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </InputWrapper>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Додати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddServiceForm;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../Button/Button\";\r\nimport { CloseButton } from \"../Button/Button\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport { CgClose } from \"react-icons/cg\";\r\n\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./EditServiceForm.styled\";\r\n\r\nconst EditServiceForm = ({ element, onClose, id, edit }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Функція, що перевіряє значення на undefined і встановлює пустий рядок в разі потреби\r\n  const getFieldValue = (obj, fieldName) => {\r\n    if (\r\n      !obj ||\r\n      typeof obj[fieldName] === \"undefined\" ||\r\n      obj[fieldName] === null\r\n    ) {\r\n      return \"\";\r\n    } else {\r\n      return obj[fieldName];\r\n    }\r\n  };\r\n\r\n  // Початкові значення\r\n  const initialValues = {\r\n    DescriptionUA: getFieldValue(element, \"DescriptionUA\"),\r\n    DescriptionEN: getFieldValue(element, \"DescriptionEN\"),\r\n    PriceUAH: getFieldValue(element, \"PriceUAH\"),\r\n    Unit: getFieldValue(element, \"Unit\"),\r\n    OwnerBarcode: getFieldValue(element, \"OwnerBarcode\"),\r\n    Comment: getFieldValue(element, \"Comment\"),\r\n  };\r\n  // Схема валідації\r\n  const addServiceSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    // formik метод очистки форми\r\n    const { resetForm } = actions;\r\n\r\n    // перебирає ключі отримані із форми і перевіряє чи є вони у об'єкта який редагується, якщо немає то додає\r\n    const changedValues = Object.keys(values).reduce((acc, key) => {\r\n      if (values[key] !== initialValues[key]) {\r\n        acc[key] = values[key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n    // console.log(\"changedValues: \", changedValues);\r\n\r\n    // Відправка даних у верхній компонент\r\n    edit(id, changedValues);\r\n    actions.setSubmitting(false); // Позначити, що обробка завершена\r\n\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Редагувати послугу: {element.DescriptionUA}</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addServiceSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введість опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputWrapper>\r\n                  <label htmlFor=\"OwnerBarcode\">Власний код</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Власний код\"\r\n                    name=\"OwnerBarcode\"\r\n                    id=\"OwnerBarcode\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.OwnerBarcode,\r\n                      props.values.OwnerBarcode\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"PriceUAH\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </InputWrapper>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Редагувати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditServiceForm;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\n// functions\r\nimport { getServiceByParentId } from \"../../services\";\r\nimport { createLevel } from \"../../services\";\r\nimport { addService } from \"../../services\";\r\nimport { updateService } from \"../../services\";\r\nimport { removeService } from \"../../services\";\r\n\r\n// components\r\nimport Category from \"../Category/Category\";\r\nimport { List, Item } from \"./ServiceList.styled\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddServiceForm from \"../AddServiceForm/AddServiceForm\";\r\nimport EditServiceForm from \"../EditServiceForm/EditServiceForm\";\r\nimport Confirm from \"../Confirm/Confirm\";\r\nimport { Button } from \"../Button/Button\";\r\n\r\nconst ServiceList = ({ items, query }) => {\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [newService, setNewService] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [curentItems, setCurrentItems] = useState(items);\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n\r\n  // Запит по під категорії\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    async function subCategory(selectedId) {\r\n      // console.log(\"get subcategory effect\");\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await getServiceByParentId(\r\n          selectedId,\r\n          controller.signal\r\n        );\r\n        setSubCategories(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось завантажити підкагеторії\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    if (!selectedId) {\r\n      return;\r\n    }\r\n    subCategory(selectedId);\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [selectedId, newService, setSubCategories]);\r\n\r\n  const level = useMemo(() => {\r\n    if (items.length > 0) {\r\n      return createLevel(items[0].ElementNestingLevel);\r\n    }\r\n    return null;\r\n  }, [items]);\r\n\r\n  // Функція формує cpv код і тоглить відкриття категорії\r\n  const selectCategory = async (event, id) => {\r\n    if (event.target.tagName !== \"path\" && event.target.tagName !== \"svg\") {\r\n      toggleCategory(id);\r\n    }\r\n  };\r\n\r\n  // Відкриття-закриття категорії\r\n  function toggleCategory(id) {\r\n    if (selectedId === id) {\r\n      // console.log(\"set null\");\r\n      setSelectedId(null);\r\n    } else {\r\n      // console.log(\"set\", id);\r\n      setSelectedId(id);\r\n    }\r\n  }\r\n\r\n  // Створення сервісу\r\n  function createService(service) {\r\n    const controller = new AbortController();\r\n    async function createService(newService) {\r\n      try {\r\n        const response = await addService(newService, controller.signal);\r\n        toast.success(\"Послугу успішно створено\");\r\n        setNewService(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось створити послугу\");\r\n      }\r\n    }\r\n    createService(service);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n\r\n  // Редагування сервісу\r\n  function editService(id, editedService) {\r\n    const controller = new AbortController();\r\n    async function edit(id, editedService) {\r\n      try {\r\n        const response = await updateService(\r\n          id,\r\n          editedService,\r\n          controller.signal\r\n        );\r\n        setCurrentItems(\r\n          curentItems.map((item) => {\r\n            if (item._id === id) {\r\n              return {\r\n                ...response.data,\r\n              };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n        toast.success(\"Послугу успішно оновлено\");\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось оновити послугу\");\r\n      }\r\n    }\r\n    edit(id, editedService);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n  // Відкриття меню підтвердження\r\n  const confirmDelete = (id) => {\r\n    setConfirmOpen(id);\r\n  };\r\n\r\n  // Тогл меню підтвердження\r\n  const toggleConfirm = () => {\r\n    setConfirmOpen(!confirmOpen);\r\n  };\r\n\r\n  // Видалення сервісу\r\n  async function handleDelete(id) {\r\n    try {\r\n      const result = await removeService(id);\r\n      if (result) {\r\n        toast.info(\"Послуга успішно видалена\");\r\n        setCurrentItems(\r\n          curentItems.filter(\r\n            (category) => category._id !== result.data.service._id\r\n          )\r\n        );\r\n        setConfirmOpen(false);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Не вдалось видалити  послугу\");\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List level={level}>\r\n        {curentItems.map((item) => (\r\n          <Item key={item._id}>\r\n            {/* якщо вибраний елемент */}\r\n            {selectedId === item._id ? (\r\n              <Category\r\n                element={item}\r\n                selectCategory={(event) => selectCategory(event, item._id)}\r\n                query={query}\r\n                isSelected={selectedId === item._id}\r\n                handleDelete={confirmDelete}\r\n                addForm={AddServiceForm}\r\n                editForm={EditServiceForm}\r\n                create={createService}\r\n                edit={editService}\r\n              >\r\n                {isLoading ? (\r\n                  <BarLoader color=\"#125b56\" width=\"100%\" />\r\n                ) : (\r\n                  <ServiceList items={subCategories} query={query} />\r\n                )}\r\n              </Category>\r\n            ) : (\r\n              <Category\r\n                element={item}\r\n                selectCategory={(event) => selectCategory(event, item._id)}\r\n                handleDelete={confirmDelete}\r\n                query={query}\r\n                addForm={AddServiceForm}\r\n                editForm={EditServiceForm}\r\n                create={createService}\r\n                edit={editService}\r\n              ></Category>\r\n            )}\r\n          </Item>\r\n        ))}\r\n      </List>\r\n      {confirmOpen && (\r\n        <Confirm onClose={toggleConfirm} title=\"Ви точно хочете видалити?\">\r\n          <>\r\n            <Button onClick={() => handleDelete(confirmOpen)} role=\"warning\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={toggleConfirm}>Cancel</Button>\r\n          </>\r\n        </Confirm>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n"],"names":["ItemMenu","styled","div","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","props","theme","space","CategoryWrapper","_templateObject3","CodeWrapper","_templateObject4","setBgColor","CategoryCode","p","_templateObject5","colors","textWhiteColor","fontSizes","m","DescriptionWrapper","_templateObject6","CategoryDescription","_templateObject7","_templateObject8","HilightDescription","_templateObject9","s","type","MaterialPrice","_templateObject10","green","MaterialUnit","_templateObject11","orange","_templateObject12","Extended","_templateObject13","fadeIn","keyframes","_templateObject14","expandHeight","_templateObject15","SubList","_templateObject16","Animation","_templateObject17","_ref","element","_ref$element","_id","ParentElementId","Code","DescriptionUA","PriceUAH","Unit","ElementNestingLevel","selectCategory","children","query","isSelected","handleDelete","AddForm","addForm","create","EditForm","editForm","edit","_useState","useState","_useState2","_slicedToArray","level","setLevel","_useState3","_useState4","addFormVisible","setAddFormVisible","_useState5","_useState6","editFormVisible","setEditFormVisible","role","useContext","context","useEffect","createLevel","_jsxs","_Fragment","onClick","_jsx","CopyToClipboard","text","onCopy","toast","info","concat","IconButton","icon","IoIosCopy","visibility","position","variant","tooltip","hiLight","id","FaSquarePlus","MdModeEditOutline","MdDelete","TransitionGroup","CSSTransition","classNames","timeout","unmountOnExit","onClose","in","List","ul","Item","li","StyledForm","Form","shadows","full","FormTitle","h2","TextArea","Field","backgroundWhite","borders","bold","bordercolor","radii","normal","black","shadow","_ref2","InputWrapper","Input","_ref3","_ref4","Select","select","_ref5","_ref6","InputGroup","ErrorMessageStyled","invalid","ButtonWrapper","additionalFields","setAdditionalFields","inputs","label","addMaterialSchema","yup","shape","min","max","required","DescriptionEN","typeError","positive","oneOf","Length","integer","Width","Height","Density","WeightElement","Perimeter","Area","Volume","WriteOffCoefficient","Consumption","ConsumptionPer1m2","ConsumptionPer1m3","ConsumptionPer1m","ConsumptionPer1t","OwnerBarcode","Formik","initialValues","Comment","validationSchema","onSubmit","values","actions","resetForm","filteredValues","Object","fromEntries","entries","filter","additionalElement","_objectSpread","CloseButton","CgClose","htmlFor","name","placeholder","validationColor","errors","ErrorMessage","render","msg","as","value","disabled","hidden","IoMdArrowDropupCircle","IoMdArrowDropdownCircle","map","Button","keys","length","getFieldValue","obj","fieldName","addElementSchema","changedValues","reduce","acc","key","setSubmitting","MaterialList","items","subCategories","setSubCategories","selectedId","setSelectedId","newMaterial","setNewMaterial","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","curentItems","setCurrentItems","_useState11","_useState12","confirmOpen","setConfirmOpen","controller","AbortController","_subCategory","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getByParentId","signal","sent","data","t0","error","finish","stop","apply","arguments","_x","subCategory","abort","useMemo","_callee2","event","_context2","target","tagName","toggleCategory","_x2","_x3","createMaterial","material","_createMaterial","_callee3","_context3","addMaterial","success","_x4","editMaterial","editedMaterial","_edit","_callee4","_context4","updateMaterial","item","_x5","_x6","confirmDelete","toggleConfirm","_handleDelete","_callee5","result","_context5","removeMaterial","category","Category","AddMaterialForm","EditMaterialForm","BarLoader","color","width","Confirm","title","_x7","results","ServiceList","FormStyled","form","Label","input","none","submit","back","isSubmiting","searchValue","setSearchValue","handleSubmit","preventDefault","trim","BackButton","IoMdBackspace","onChange","normalizedQuery","currentTarget","toLowerCase","SearchButton","IoSearch","addServiceSchema","newService","setNewService","getServiceByParentId","createService","service","_createService","addService","editService","editedService","updateService","removeService","AddServiceForm","EditServiceForm"],"sourceRoot":""}