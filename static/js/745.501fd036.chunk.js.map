{"version":3,"file":"static/js/745.501fd036.chunk.js","mappings":"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","sources":["webpack://classifier/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginForm_formWrapper__TR8nd\",\"form\":\"LoginForm_form__njTkS\",\"inputWrapper\":\"LoginForm_inputWrapper__awyaz\",\"label\":\"LoginForm_label__uA+Ih\",\"input\":\"LoginForm_input__R6NCE\",\"submitBtn\":\"LoginForm_submitBtn__Ah5HJ\",\"loginBtn\":\"LoginForm_loginBtn__LvXCS\"};","import styled from \"styled-components\";\r\n\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  width: 300px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  /* border-color: ${(props) => props.theme.colors.black}; */\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  /* padding: 12px 12px 12px 40px; */\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    /* background-color: ${(props) => props.theme.colors.backgroundWhite}; */\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label``;\r\n","import React, { useContext } from \"react\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// Навігація\r\nimport { Button } from \"../Button/Button\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport css from \"./LoginForm.module.css\";\r\nimport { StyledForm, Input, InputWrapper } from \"./LoginForm.styled\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { authContext as context } from \"../../context/authContext\";\r\n\r\nconst LoginForm = () => {\r\n  const { onLogIn } = useContext(context);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const loginSchema = yup.object().shape({\r\n    email: yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"No password provided.\")\r\n      .min(6, \"Password is too short - should be 6 chars minimum.\"),\r\n  });\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    const { resetForm } = actions;\r\n    // console.log(\"values: \", values);\r\n    // console.log(\"actions: \", actions);\r\n\r\n    // Передача даних в контекст (глобальний стейт)\r\n    onLogIn(values);\r\n\r\n    // Очистка форми\r\n    resetForm();\r\n    // console.log(\"форма очищена\");\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={loginSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <h2>LogIn</h2>\r\n            <InputWrapper>\r\n              <label htmlFor=\"email\" className={css.label}>\r\n                Email\r\n              </label>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                bordercolor={validationColor(\r\n                  props.errors.email,\r\n                  props.values.email,\r\n                  \"rgb(0, 0, 0)\"\r\n                )}\r\n              />\r\n              <ErrorMessage name=\"email\" />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"password\" className={css.label}>\r\n                Password\r\n              </label>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                bordercolor={validationColor(\r\n                  props.errors.password,\r\n                  props.values.password,\r\n                  \"rgb(0, 0, 0)\"\r\n                )}\r\n              />\r\n              <ErrorMessage name=\"password\" />\r\n            </InputWrapper>\r\n            <Button type=\"submit\">LogIn</Button>\r\n            <NavLink className={css.button} to={\"/registration\"}>\r\n              Registration\r\n            </NavLink>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Section from \"../../components/Section/Section\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\r\n\r\nconst LogInPage = () => {\r\n  return (\r\n    <Section>\r\n      <LoginForm />\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","InputWrapper","div","_templateObject2","Input","Field","_templateObject3","props","theme","colors","backgroundWhite","borders","bold","black","_ref","bordercolor","radii","normal","_ref2","label","_templateObject4","onLogIn","useContext","context","loginSchema","yup","shape","email","required","password","min","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","_jsxs","htmlFor","className","css","name","type","id","validationColor","errors","ErrorMessage","Button","NavLink","button","to","Section","LoginForm"],"sourceRoot":""}