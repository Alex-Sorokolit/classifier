{"version":3,"file":"static/js/81.5d876d3c.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegisterForm.styled.js","webpack://classifier/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  width: 300px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  /* border-color: ${(props) => props.theme.colors.black}; */\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  /* padding: 12px 12px 12px 40px; */\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    /* background-color: ${(props) => props.theme.colors.backgroundWhite}; */\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label``;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"RegistrationForm_formWrapper__M4W+A\",\"form\":\"RegistrationForm_form__jPyEh\",\"inputWrapper\":\"RegistrationForm_inputWrapper__sw4lF\",\"label\":\"RegistrationForm_label__AWBTb\",\"input\":\"RegistrationForm_input__bRufy\",\"submitBtn\":\"RegistrationForm_submitBtn__lVhX-\",\"loginBtn\":\"RegistrationForm_loginBtn__zQTqO\"};","import React, { useContext } from \"react\";\r\nimport { authContext as context } from \"../../context/authContext\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { StyledForm, Input, InputWrapper } from \"./RegisterForm.styled\";\r\nimport { Button } from \"../Button/Button\";\r\nimport { validationColor } from \"../../services/utility\";\r\n\r\n// Навігація\r\nimport { NavLink } from \"react-router-dom\";\r\nimport css from \"./RegistrationForm.module.css\";\r\n\r\nconst RegistrationForm = () => {\r\n  const { onRegister } = useContext(context);\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const registerSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    email: yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: yup\r\n      .string()\r\n      .min(6, \"Your password is short\")\r\n      .max(16, \"Your password is to long\")\r\n      .matches(/[1-9]/, \"Your password is little secure. Add a number!\")\r\n      .matches(\r\n        /[a-zа-яA-ZА-ЯіїЇІєЄ]/,\r\n        \"Your password is little secure. Add a letter!\"\r\n      )\r\n      .matches(/^[a-zа-яA-ZА-ЯіїЇІЄє1-9]/, \"Enter a valid Password*\")\r\n      .required(\"Enter a Password*\"),\r\n  });\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    // console.log(\"actions: \", actions);\r\n    // console.log(\"values: \", values);\r\n    const { resetForm } = actions;\r\n\r\n    // Передача даних в контекст (глобальний стейт)\r\n    onRegister(values);\r\n\r\n    // Очистка форми\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={registerSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm className={css.form}>\r\n            <h2>Registration</h2>\r\n            <InputWrapper>\r\n              <label htmlFor=\"name\" className={css.label}>\r\n                Name\r\n              </label>\r\n              <Input\r\n                name=\"name\"\r\n                type=\"text\"\r\n                id=\"name\"\r\n                bordercolor={validationColor(\r\n                  props.errors.name,\r\n                  props.values.name,\r\n                  \"rgb(0, 0, 0)\"\r\n                )}\r\n              />\r\n              <ErrorMessage name=\"name\" />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"email\" className={css.label}>\r\n                Email\r\n              </label>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                bordercolor={validationColor(\r\n                  props.errors.email,\r\n                  props.values.email,\r\n                  \"rgb(0, 0, 0)\"\r\n                )}\r\n              />\r\n              <ErrorMessage name=\"email\" />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"password\" className={css.label}>\r\n                Password\r\n              </label>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                bordercolor={validationColor(\r\n                  props.errors.password,\r\n                  props.values.password,\r\n                  \"rgb(0, 0, 0)\"\r\n                )}\r\n              />\r\n              <ErrorMessage name=\"password\" />\r\n            </InputWrapper>\r\n            <Button type=\"submit\">Send</Button>\r\n            <NavLink className={css.loginBtn} to={\"/login\"}>\r\n              LogIn\r\n            </NavLink>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from \"react\";\r\nimport Section from \"../../components/Section/Section\";\r\nimport RegistrationForm from \"../../components/RegistrationForm/RegistrationForm\";\r\nconst RegisterPage = () => {\r\n  return (\r\n    <Section>\r\n      <RegistrationForm />\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","InputWrapper","div","_templateObject2","Input","Field","_templateObject3","props","theme","colors","backgroundWhite","borders","bold","black","_ref","bordercolor","radii","normal","_ref2","label","_templateObject4","onRegister","useContext","context","registerSchema","yup","shape","name","min","max","required","email","password","matches","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","_jsxs","className","css","htmlFor","type","id","validationColor","errors","ErrorMessage","Button","NavLink","to","Section","RegistrationForm"],"sourceRoot":""}