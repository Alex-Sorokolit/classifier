{"version":3,"file":"static/js/825.1fd285a6.chunk.js","mappings":"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","sources":["components/Users/Users.styled.js","components/Users/Users.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","pages/AdminPage/AdminPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { setRoleColor } from \"../../services\";\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n\n  & caption {\n    text-align: left;\n  }\n\n  & th,\n  & td {\n    padding: 2px 10px;\n    border: 1px solid #2a2a2a;\n  }\n\n  & tr:hover {\n    background-color: ${(props) => props.theme.colors.backgroundGrey};\n  }\n`;\n\nexport const Row = styled.tr``;\n\nexport const Name = styled.td`\n  /* color: ${(props) => props.theme.colors.white}; */\n  /* background-color: ${setRoleColor}; */\n`;\nexport const Role = styled.td`\n  /* color: ${(props) => props.theme.colors.white}; */\n  background-color: ${setRoleColor};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { getAllUsers, updateRole } from \"../../services\";\nimport { toast } from \"react-toastify\";\nimport { Table, Row, Name, Role } from \"./Users.styled\";\nimport Select from \"react-select\";\n\nconst options = [\n  { value: \"user\", label: \"user\" },\n  { value: \"designer\", label: \"designer\" },\n  { value: \"creator\", label: \"creator\" },\n  { value: \"service\", label: \"service\" },\n  { value: \"rental\", label: \"rental\" },\n];\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n\n  // запит по всіх користувачів\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function allUsers() {\n      try {\n        const response = await getAllUsers(controller.signal);\n        // console.log(\"response: \", response.data);\n        setUsers(response.data);\n      } catch (error) {\n        toast.error(\"Не вдалось завантажити користувачів\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    allUsers();\n  }, []);\n\n  // функція зміни ролі\n  async function handleChange(selectedRole, id) {\n    setSelectedRole(selectedRole);\n    // Запит на зміну ролі\n    const controller = new AbortController();\n    async function updateUserRole(id) {\n      try {\n        // Виконуємо запит на зміну ролі\n        const response = await updateRole(\n          id,\n          selectedRole.value,\n          controller.signal\n        );\n\n        // Якщо запит успішний, оновлюємо стан користувачів\n        if (response.status === 200) {\n          // Знаходимо індекс користувача, якому ми змінюємо роль\n          const userIndex = users.findIndex((user) => user._id === id);\n\n          // Перевіряємо, чи знайдено користувача з вказаним ідентифікатором\n          if (userIndex !== -1) {\n            // Клонуємо масив користувачів\n            const updatedUsers = [...users];\n\n            // Оновлюємо роль користувача з вказаним ідентифікатором\n            updatedUsers[userIndex] = {\n              ...updatedUsers[userIndex],\n              role: selectedRole.value,\n            };\n\n            // Встановлюємо оновлений масив користувачів у стані компонента\n            setUsers(updatedUsers);\n          }\n        }\n      } catch (error) {\n        // Виводимо повідомлення про помилку, якщо сталася помилка під час виконання запиту\n        toast.error(\"Не вдалось оновити роль\");\n      }\n    }\n\n    // Викликаємо функцію для оновлення ролі користувача\n    updateUserRole(id);\n  }\n\n  // функція Сортування таблиці\n  const sortData = (param) => {\n    const sortedData =\n      sortDirection === \"asc\"\n        ? [...users].sort((a, b) =>\n            a[param] < b[param] ? -1 : a[param] > b[param] ? 1 : 0\n          )\n        : [...users].sort((a, b) =>\n            b[param] < a[param] ? -1 : b[param] > a[param] ? 1 : 0\n          );\n\n    setUsers(sortedData);\n    setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n  };\n\n  return (\n    <>\n      {!isLoading && (\n        <div>\n          <Table>\n            <caption>Список зареєстрованих користувачів</caption>\n            <thead>\n              <tr>\n                <th onClick={() => sortData(\"name\")}>Ім'я</th>\n                <th onClick={() => sortData(\"lastName\")}>Прізвище</th>\n                <th onClick={() => sortData(\"email\")}>Email</th>\n                <th onClick={() => sortData(\"phone\")}>Телефон</th>\n                <th onClick={() => sortData(\"company\")}>Компанія</th>\n                <th onClick={() => sortData(\"jobRole\")}>Посада</th>\n                <th onClick={() => sortData(\"role\")}>Змінити роль</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user) => {\n                return (\n                  <Row key={user._id}>\n                    <Name role={user.role}>{user.name}</Name>\n                    <Name role={user.role}>{user.lastName}</Name>\n                    <td>{user.email}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.company}</td>\n                    <td>{user.jobRole}</td>\n                    <Role role={user.role}>\n                      <Select\n                        isDisabled={user.role === \"admin\"}\n                        placeholder={user.role}\n                        defaultValue={selectedRole}\n                        onChange={(option) => handleChange(option, user._id)}\n                        options={options}\n                      />\n                    </Role>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n\n          <p>Кількість користувачів: {users.length}</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Users;\n","import styled from \"styled-components\";\n\nexport const Navigation = styled.nav`\n  height: 100%;\n  border: 1px solid tomato;\n  display: flex;\n  flex-direction: column;\n  box-shadow: ${(props) => props.theme.shadows.shadow};\n  padding: 5px;\n  justify-content: start;\n  align-items: center;\n  width: 200px;\n`;\n","import React from \"react\";\nimport { Navigation } from \"./SideBar.styled\";\n\nconst SideBar = ({ children }) => {\n  return (\n    <>\n      <Navigation>\n        <ul>{children}</ul>\n      </Navigation>\n    </>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport Users from \"../../components/Users/Users\";\nimport SideBar from \"../../components/SideBar/SideBar\";\nimport Section from \"../../components/Section/Section\";\nconst AdminPage = () => {\n  return (\n    <Section>\n      <SideBar></SideBar>\n      <div>\n        <Users />\n      </div>\n    </Section>\n  );\n};\n\nexport default AdminPage;\n"],"names":["Table","styled","table","_templateObject","_taggedTemplateLiteral","props","theme","colors","backgroundGrey","Row","tr","_templateObject2","Name","td","_templateObject3","white","setRoleColor","Role","_templateObject4","options","value","label","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","selectedRole","setSelectedRole","_useState7","_useState8","sortDirection","setSortDirection","_handleChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","id","controller","updateUserRole","_updateUserRole","wrap","_context3","prev","next","_callee2","userIndex","updatedUsers","_context2","updateRole","signal","sent","status","findIndex","user","_id","_toConsumableArray","_objectSpread","role","t0","toast","error","stop","apply","arguments","_x3","AbortController","useEffect","_allUsers","_callee","response","_context","getAllUsers","data","finish","allUsers","sortData","param","sortedData","sort","a","b","_jsx","_Fragment","children","_jsxs","onClick","map","name","lastName","email","phone","company","jobRole","Select","isDisabled","placeholder","defaultValue","onChange","option","_x","_x2","handleChange","length","Navigation","nav","shadows","shadow","_ref","Section","SideBar","Users"],"sourceRoot":""}