{"version":3,"file":"static/js/745.7961083a.chunk.js","mappings":"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","sources":["webpack://classifier/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginForm_formWrapper__Sc8W5\",\"form\":\"LoginForm_form__gPEx5\",\"inputWrapper\":\"LoginForm_inputWrapper__jO1zg\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"submitBtn\":\"LoginForm_submitBtn__O3h3k\",\"loginBtn\":\"LoginForm_loginBtn__ds2GS\"};","import styled from \"styled-components\";\n\nimport { Form, Field } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledForm = styled(Form)`\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: center;\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\n  border: ${(props) => props.theme.borders.bold};\n  border-color: ${({ bordercolor }) => bordercolor};\n  border-radius: ${(props) => props.theme.radii.normal};\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  /* padding: 12px 12px 12px 40px; */\n  padding: 4px;\n  color: ${(props) => props.theme.colors.black};\n\n  @media screen and (min-width: 480px) {\n    font-size: 14px;\n    padding: 8px;\n  }\n\n  &:hover,\n  &:focus {\n    border: ${(props) => props.theme.borders.bold};\n    /* background-color: ${(props) => props.theme.colors.backgroundWhite}; */\n    border-color: ${({ bordercolor }) => bordercolor};\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: ${(props) => props.theme.colors.black};\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.colors.hover};\n  }\n`;\n\nexport const Label = styled.label``;\n\nexport const ErrorMessageStyled = styled.div`\n  color: ${(props) => props.theme.colors.invalid};\n  position: absolute;\n  right: 0;\n`;\n\nexport const FormButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding-top: 10px;\n  padding-bottom: 20px;\n  @media screen and (min-width: 480px) {\n    padding-top: 20px;\n    padding-bottom: 20px;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\n// Навігація\nimport { Button } from \"../Button/Button\";\nimport css from \"./LoginForm.module.css\";\nimport {\n  StyledForm,\n  Input,\n  InputWrapper,\n  StyledLink,\n  ErrorMessageStyled,\n  FormButtonWrapper,\n} from \"./LoginForm.styled\";\nimport { validationColor } from \"../../services/utility\";\nimport { authContext as context } from \"../../context/authContext\";\n\nconst LoginForm = () => {\n  const { onLogIn } = useContext(context);\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const loginSchema = yup.object().shape({\n    email: yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: yup\n      .string()\n      .required(\"No password provided.\")\n      .min(6, \"Password is too short - should be 6 chars minimum.\"),\n  });\n\n  const handleSubmit = (values, actions) => {\n    const { resetForm } = actions;\n    // console.log(\"values: \", values);\n    // console.log(\"actions: \", actions);\n\n    // Передача даних в контекст (глобальний стейт)\n    onLogIn(values);\n\n    // Очистка форми\n    resetForm();\n    // console.log(\"форма очищена\");\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema}\n        onSubmit={handleSubmit}\n      >\n        {(props) => (\n          <StyledForm>\n            <h2>LogIn</h2>\n            <InputWrapper>\n              <label htmlFor=\"email\" className={css.label}>\n                Email\n              </label>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                autoFocus\n                bordercolor={validationColor(\n                  props.errors.email,\n                  props.values.email,\n                  \"rgb(0, 0, 0)\"\n                )}\n              />\n              <ErrorMessage\n                name=\"email\"\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\n              />\n            </InputWrapper>\n            <InputWrapper>\n              <label htmlFor=\"password\" className={css.label}>\n                Password\n              </label>\n              <Input\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                bordercolor={validationColor(\n                  props.errors.password,\n                  props.values.password,\n                  \"rgb(0, 0, 0)\"\n                )}\n              />\n              <ErrorMessage\n                name=\"password\"\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\n              />\n            </InputWrapper>\n            <FormButtonWrapper>\n              <Button type=\"submit\">LogIn</Button>\n              <StyledLink to={\"/registration\"}>Registration</StyledLink>\n            </FormButtonWrapper>\n          </StyledForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport Section from \"../../components/Section/Section\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\n\nconst LogInPage = () => {\n  return (\n    <Section>\n      <LoginForm />\n    </Section>\n  );\n};\n\nexport default LogInPage;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","InputWrapper","div","_templateObject2","Input","Field","_templateObject3","props","theme","colors","backgroundWhite","borders","bold","_ref","bordercolor","radii","normal","black","_ref2","StyledLink","NavLink","_templateObject4","hover","ErrorMessageStyled","label","_templateObject5","_templateObject6","invalid","FormButtonWrapper","_templateObject7","onLogIn","useContext","context","loginSchema","yup","shape","email","required","password","min","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","_jsxs","htmlFor","className","css","name","type","id","autoFocus","validationColor","errors","ErrorMessage","render","msg","Button","to","Section","LoginForm"],"sourceRoot":""}