{"version":3,"file":"static/js/683.76654de2.chunk.js","mappings":"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","sources":["components/ItemMenu/ItemMenu.jsx","components/Category/Category.styled.js","components/Category/Category.jsx","components/MaterialList/MaterialList.styled.js","components/AddMaterialForm/AddMaterialForm.styled.js","components/AddMaterialForm/AddMaterialForm.jsx","components/EditMaterialForm/EditMaterialForm.styled.js","components/EditMaterialForm/EditMaterialForm.jsx","components/MaterialList/MaterialList.jsx","components/SearchResults/SearchResults.jsx","components/Search/Search.styled.js","components/Search/Search.jsx","components/ServiceList/ServiceList.styled.js","components/AddServiceForm/AddServiceForm.styled.js","components/AddServiceForm/AddServiceForm.jsx","components/EditServiceForm/EditServiceForm.styled.js","components/EditServiceForm/EditServiceForm.jsx","components/ServiceList/ServiceList.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { authContext as context } from \"../../context/authContext\";\r\nimport { IconButton } from \"../Button/Button\";\r\nimport { MdModeEditOutline } from \"react-icons/md\";\r\nimport { FaSquarePlus } from \"react-icons/fa6\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst ItemMenu = ({ id, toggleAddForm, toggleEditeForm, handleDelete }) => {\r\n  const { role } = useContext(context);\r\n  if (role === \"admin\") {\r\n    return (\r\n      <>\r\n        <IconButton\r\n          id=\"add\"\r\n          icon={FaSquarePlus}\r\n          visibility=\"visible\"\r\n          variant=\"neutral\"\r\n          tooltip=\"Додати\"\r\n          onClick={() => toggleAddForm(id)}\r\n        ></IconButton>\r\n        <IconButton\r\n          icon={MdModeEditOutline}\r\n          visibility=\"visible\"\r\n          variant=\"neutral\"\r\n          tooltip=\"Редагувати\"\r\n          onClick={() => toggleEditeForm(id)}\r\n        ></IconButton>\r\n        <IconButton\r\n          icon={MdDelete}\r\n          visibility=\"visible\"\r\n          variant=\"neutral\"\r\n          tooltip=\"Видалити\"\r\n          onClick={() => handleDelete(id)}\r\n        ></IconButton>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ItemMenu;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { setBgColor } from \"../../services\";\r\n\r\nexport const MenuWrapper = styled.div`\r\n  /* outline: 1px solid tomato; */\r\n  position: absolute;\r\n  display: flex;\r\n  transition: opacity 0.3s ease; /* Плавна анімація зміни прозорості */\r\n  opacity: 1; /* Початкова прозорість */\r\n  top: 0;\r\n  right: 0;\r\n\r\n  @media screen and (min-width: 680px) {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* background-color: var(--materialColorAlfa); */\r\n  background-color: ${(props) =>\r\n    props.isdelete\r\n      ? props.theme.colors.atention\r\n      : props.theme.colors.backgroundGrey};\r\n  /* outline: 1px solid tomato; */\r\n  margin-bottom: ${(props) => props.theme.space[2]}px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: var(--card-shadow);\r\n    background-color: white;\r\n\r\n    /* Зміна прозорості у ItemMenu при ховері на Card */\r\n    & ${MenuWrapper} {\r\n      opacity: 1; /* Нове значення прозорості */\r\n    }\r\n  }\r\n  &:focus {\r\n    box-shadow: var(--card-shadow);\r\n    background-color: white;\r\n\r\n    /* Зміна прозорості у ItemMenu при ховері на Card */\r\n    & ${MenuWrapper} {\r\n      opacity: 1; /* Нове значення прозорості */\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CategoryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: start;\r\n  border-radius: 5px;\r\n\r\n  width: 100%;\r\n\r\n  /* outline: 1px solid blue; */\r\n\r\n  @media screen and (min-width: 680px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const CodeWrapper = styled.div`\r\n  position: relative;\r\n  text-align: start;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: ${setBgColor};\r\n  border-radius: 0 5px 5px 0px;\r\n  justify-content: end;\r\n\r\n  @media screen and (min-width: 680px) {\r\n    /* display: flex; */\r\n    width: auto;\r\n    text-align: start;\r\n  }\r\n`;\r\n\r\nexport const CategoryCode = styled.p`\r\n  padding: ${(props) => props.theme.space[2]}px;\r\n  padding-left: ${(props) => props.theme.space[5]}px;\r\n  padding-right: ${(props) => props.theme.space[3]}px;\r\n  border-radius: 0 5px 5px 0px;\r\n  display: inline-block;\r\n  min-width: 90px;\r\n  text-align: center;\r\n  color: ${(props) => props.theme.colors.textWhiteColor};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  @media screen and (min-width: 680px) {\r\n    padding-left: ${(props) => props.theme.space[3]}px;\r\n  }\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  padding: ${(props) => props.theme.space[2]}px;\r\n  /* outline: 1px solid red; */\r\n  position: relative;\r\n`;\r\n\r\nexport const CopyParent = styled.div`\r\n  /* position: relative; */\r\n  /* outline: 1px solid green; */\r\n`;\r\n\r\nexport const CategoryDescription = styled.p`\r\n  padding-left: 30px;\r\n  line-height: 1;\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n`;\r\nexport const HilightDescription = styled.div`\r\n  padding-left: 30px;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  background-color: ${(props) => props.type === \"mark\" && \"yellow\"};\r\n`;\r\n\r\nexport const MaterialPrice = styled.p`\r\n  font-size: 12px;\r\n  color: ${(props) => props.theme.colors.green};\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const UserPrice = styled.p`\r\n  font-size: 12px;\r\n  color: ${(props) => props.theme.colors.orange};\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const MaterialUnit = styled.p`\r\n  font-size: 12px;\r\n  color: var(--unit-color);\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const Extended = styled.div`\r\n  line-height: 1;\r\n  /* outline: 1px red solid; */\r\n  padding-left: 24px;\r\n  display: flex;\r\n`;\r\n// Можна отримати доступ до пропсів\r\n//  ${(props) => {\r\n//     console.log(props);\r\n//   }}\r\n\r\n// Так можна додати зображення на фон\r\n// background-image: ${props => `url(${props.img})`}\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst expandHeight = keyframes`\r\nfrom {\r\n    max-height: 0;\r\n  }\r\n  to {\r\n    max-height: 1000px; \r\n  }\r\n`;\r\n\r\nexport const SubList = styled.div`\r\n  /* animation: 2s ${fadeIn} ease-in; */\r\n  animation: ${expandHeight} 0.5s ease-in-out;\r\n  /* overflow: hidden; */\r\n`;\r\n\r\nexport const Animation = styled.div`\r\n  &.fade-enter {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n  }\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\r\n  }\r\n\r\n  /* Використання спеціальних імен класів для анімації зникнення */\r\n  &.fade-exit {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { createLevel } from \"../../services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IconButton } from \"../Button/Button\";\r\nimport { IoIosCopy } from \"react-icons/io\";\r\nimport { hiLight } from \"../../services\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n// import { IoCheckbox } from \"react-icons/io5\";\r\nimport ItemMenu from \"../ItemMenu/ItemMenu\";\r\nimport {\r\n  CategoryWrapper,\r\n  CategoryCode,\r\n  CategoryDescription,\r\n  HilightDescription,\r\n  CodeWrapper,\r\n  DescriptionWrapper,\r\n  MaterialPrice,\r\n  MaterialUnit,\r\n  Extended,\r\n  SubList,\r\n  Card,\r\n  MenuWrapper,\r\n  Animation,\r\n} from \"./Category.styled\";\r\n\r\n// Компонент рендерить розмітку категорії і вкладені списки\r\nconst Category = ({\r\n  element,\r\n  element: {\r\n    _id,\r\n    ParentElementId,\r\n    Code,\r\n    DescriptionUA,\r\n    PriceUAH,\r\n    Unit,\r\n    ElementNestingLevel,\r\n  },\r\n  selectCategory,\r\n  children,\r\n  query,\r\n  isSelected,\r\n  handleDelete,\r\n  addForm: AddForm,\r\n  create,\r\n  editForm: EditForm,\r\n  edit,\r\n  isdelete,\r\n}) => {\r\n  const [level, setLevel] = useState(null);\r\n  const [addFormVisible, setAddFormVisible] = useState(false);\r\n  const [editFormVisible, setEditFormVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLevel(createLevel(ElementNestingLevel));\r\n  }, [ElementNestingLevel]);\r\n\r\n  // Відкриття-закриття форми додавання\r\n  function toggleAddForm(id) {\r\n    if (addFormVisible === id) {\r\n      setAddFormVisible(null);\r\n    } else {\r\n      setAddFormVisible(id);\r\n    }\r\n  }\r\n  // Відкриття-закриття форми редагування\r\n  function toggleEditeForm(id) {\r\n    if (editFormVisible === id) {\r\n      setEditFormVisible(null);\r\n    } else {\r\n      setEditFormVisible(id);\r\n    }\r\n  }\r\n\r\n  // Закриття форми додавання\r\n  function closeAddForm() {\r\n    setAddFormVisible(null);\r\n  }\r\n  // Закриття форми редагування\r\n  function closeEditForm() {\r\n    setEditFormVisible(null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card onClick={selectCategory} isdelete={isdelete}>\r\n        <CategoryWrapper level={level}>\r\n          <CodeWrapper level={level}>\r\n            <CopyToClipboard\r\n              text={Code}\r\n              onCopy={() =>\r\n                toast.info(`Код ${Code} скопійовано в буфер омбіну`)\r\n              }\r\n            >\r\n              <IconButton\r\n                icon={IoIosCopy}\r\n                visibility=\"hide\"\r\n                position=\"absolute\"\r\n                variant=\"light\"\r\n                tooltip=\"Копіювати\"\r\n              />\r\n            </CopyToClipboard>\r\n            <CategoryCode>{Code}</CategoryCode>\r\n          </CodeWrapper>\r\n\r\n          <DescriptionWrapper>\r\n            {query ? (\r\n              <div>\r\n                <HilightDescription>\r\n                  {hiLight(query, DescriptionUA)}\r\n                </HilightDescription>\r\n                <CopyToClipboard\r\n                  text={DescriptionUA}\r\n                  onCopy={() =>\r\n                    toast.info(`${DescriptionUA} скопійовано в буфер омбіну`)\r\n                  }\r\n                >\r\n                  <IconButton\r\n                    icon={IoIosCopy}\r\n                    visibility=\"hide\"\r\n                    position=\"absolute\"\r\n                    variant=\"dark\"\r\n                    tooltip=\"Копіювати\"\r\n                  />\r\n                </CopyToClipboard>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <CopyToClipboard\r\n                  text={DescriptionUA}\r\n                  onCopy={() =>\r\n                    toast.info(`${DescriptionUA} скопійовано в буфер омбіну`)\r\n                  }\r\n                >\r\n                  <IconButton\r\n                    icon={IoIosCopy}\r\n                    visibility=\"hide\"\r\n                    position=\"absolute\"\r\n                    variant=\"dark\"\r\n                    tooltip=\"Копіювати\"\r\n                  ></IconButton>\r\n                </CopyToClipboard>\r\n                <CategoryDescription>{DescriptionUA}</CategoryDescription>\r\n              </div>\r\n            )}\r\n            <Extended>\r\n              {Unit && Unit !== \"category\" && (\r\n                <MaterialUnit>Одиниця виміру: {Unit}</MaterialUnit>\r\n              )}\r\n              {/* {Unit && Unit === \"category\" && <IoCheckbox />} */}\r\n              {PriceUAH && (\r\n                <MaterialPrice>Ціна: {PriceUAH} &#8372;</MaterialPrice>\r\n              )}\r\n            </Extended>\r\n          </DescriptionWrapper>\r\n        </CategoryWrapper>\r\n\r\n        <MenuWrapper>\r\n          <ItemMenu\r\n            id={_id}\r\n            toggleAddForm={toggleAddForm}\r\n            toggleEditeForm={toggleEditeForm}\r\n            handleDelete={handleDelete}\r\n          />\r\n        </MenuWrapper>\r\n      </Card>\r\n\r\n      <TransitionGroup>\r\n        {addFormVisible && (\r\n          <CSSTransition\r\n            // in={addFormVisible}\r\n            classNames=\"fade\"\r\n            timeout={300}\r\n            unmountOnExit\r\n          >\r\n            <Animation>\r\n              <AddForm\r\n                id={_id}\r\n                Code={Code}\r\n                ParentElementId={ParentElementId}\r\n                onClose={() => closeAddForm()}\r\n                create={create}\r\n                element={element}\r\n              />\r\n            </Animation>\r\n          </CSSTransition>\r\n        )}\r\n\r\n        {editFormVisible && (\r\n          <CSSTransition\r\n            in={editFormVisible}\r\n            classNames=\"fade\"\r\n            timeout={300}\r\n            unmountOnExit\r\n          >\r\n            <Animation>\r\n              <EditForm\r\n                id={_id}\r\n                Code={Code}\r\n                ParentElementId={ParentElementId}\r\n                onClose={() => closeEditForm()}\r\n                edit={edit}\r\n                element={element}\r\n              />\r\n            </Animation>\r\n          </CSSTransition>\r\n        )}\r\n\r\n        {isSelected && (\r\n          <CSSTransition\r\n            // in={children}\r\n            classNames=\"fade\"\r\n            timeout={300}\r\n            unmountOnExit\r\n          >\r\n            <Animation>\r\n              <SubList>{children}</SubList>\r\n            </Animation>\r\n          </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import styled from \"styled-components\";\r\nimport { setBgColor } from \"../../services\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: ${(props) => props.theme.space[3]}px;\r\n\r\n  border-left: 2px solid;\r\n  border-color: ${setBgColor};\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:hover,\r\n  &:focus {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: ${(props) => props.theme.space[1]}px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../Button/Button\";\r\nimport { CloseButton } from \"../Button/Button\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  InputGroup,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./AddMaterialForm.styled\";\r\n\r\nconst AddMaterialForm = ({ onClose, id, create }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Початкові значення\r\n  const initialValues = {\r\n    DescriptionUA: \"\",\r\n    DescriptionEN: \"\",\r\n    Code: \"\",\r\n    PriceUAH: \"\",\r\n    Unit: \"\",\r\n    Length: \"\",\r\n    Width: \"\",\r\n    Height: \"\",\r\n    Density: \"\",\r\n    WeightElement: \"\",\r\n    Perimeter: \"\",\r\n    Area: \"\",\r\n    Volume: \"\",\r\n    WriteOffCoefficient: \"\",\r\n    Consumption: \"\",\r\n    ConsumptionPer1m2: \"\",\r\n    ConsumptionPer1m3: \"\",\r\n    ConsumptionPer1m: \"\",\r\n    ConsumptionPer1t: \"\",\r\n    OwnerBarcode: \"\",\r\n    Comment: \"\",\r\n  };\r\n\r\n  // Масив для рендеру інпутів\r\n  const inputs = [\r\n    {\r\n      label: \"Довжина, мм\",\r\n      id: \"Length\",\r\n    },\r\n    {\r\n      label: \"Ширина, мм\",\r\n      id: \"Width\",\r\n    },\r\n    {\r\n      label: \"Висота, мм\",\r\n      id: \"Height\",\r\n    },\r\n    {\r\n      label: \"Щільність, кг/м3\",\r\n      id: \"Density\",\r\n    },\r\n    {\r\n      label: \"Вага, кг\",\r\n      id: \"WeightElement\",\r\n    },\r\n    {\r\n      label: \"Периметр, мм\",\r\n      id: \"Perimeter\",\r\n    },\r\n    {\r\n      label: \"Площа, м2\",\r\n      id: \"Area\",\r\n    },\r\n    {\r\n      label: \"Об'єм, м3\",\r\n      id: \"Volume\",\r\n    },\r\n    {\r\n      label: \"Коефіціент витрати\",\r\n      id: \"WriteOffCoefficient\",\r\n    },\r\n    {\r\n      label: \"Витрата\",\r\n      id: \"Consumption\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m2\",\r\n      id: \"ConsumptionPer1m2\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m3\",\r\n      id: \"ConsumptionPer1m3\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m\",\r\n      id: \"ConsumptionPer1m\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/t\",\r\n      id: \"ConsumptionPer1t\",\r\n    },\r\n    {\r\n      label: \"Власний код\",\r\n      id: \"OwnerBarcode\",\r\n    },\r\n  ];\r\n\r\n  // Схема валідації\r\n  const addMaterialSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    Code: yup\r\n      .string()\r\n      .matches(\r\n        /^\\d{8}-\\d$/,\r\n        \"Код повине бути довжиною 8 цифр, дефіс, 1 цифра, наприклад 47000000-6\"\r\n      ),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    Length: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Width: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n\r\n    Height: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Density: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WeightElement: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Perimeter: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Area: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Volume: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WriteOffCoefficient: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Consumption: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m2: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m3: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1t: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    // formik метод очистки форми\r\n    const { resetForm } = actions;\r\n\r\n    // фільтрація заповнених полів\r\n    const filteredValues = Object.fromEntries(\r\n      Object.entries(values).filter(([key, value]) => value !== \"\")\r\n    );\r\n\r\n    const additionalElement = {\r\n      ParentElementId: id,\r\n      ...filteredValues,\r\n    };\r\n\r\n    create(additionalElement);\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Додати матеріал</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addMaterialSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                autoFocus={true}\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введіть опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Code\">Код</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Код\"\r\n                name=\"Code\"\r\n                id=\"Code\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Code,\r\n                  props.values.Code\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"Code\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputGroup>\r\n                  {inputs.map(({ id, label }) => (\r\n                    <InputWrapper key={id}>\r\n                      <label htmlFor={id}>{label}</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder={label}\r\n                        name={id}\r\n                        id={id}\r\n                        bordercolor={validationColor(\r\n                          props.errors[id],\r\n                          props.values[id]\r\n                        )}\r\n                      />\r\n                      <ErrorMessage\r\n                        name={id}\r\n                        render={(msg) => (\r\n                          <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                        )}\r\n                      />\r\n                    </InputWrapper>\r\n                  ))}\r\n                </InputGroup>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Додати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n      {/* {isLoading && <BarLoader color=\"#125b56\" width=\"100%\" />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMaterialForm;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../../components/Button/Button\";\r\nimport { CloseButton } from \"../../components/Button/Button\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  InputGroup,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./EditMaterialForm.styled\";\r\n\r\nconst EditMaterialForm = ({ element, onClose, id, edit }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Функція, що перевіряє значення на undefined і встановлює пустий рядок в разі потреби\r\n  const getFieldValue = (obj, fieldName) => {\r\n    if (\r\n      !obj ||\r\n      typeof obj[fieldName] === \"undefined\" ||\r\n      obj[fieldName] === null\r\n    ) {\r\n      return \"\";\r\n    } else {\r\n      return obj[fieldName];\r\n    }\r\n  };\r\n\r\n  // Створення об'єкта initialValues на основі element з пустими значеннями для undefined полів\r\n  const initialValues = {\r\n    DescriptionUA: getFieldValue(element, \"DescriptionUA\"),\r\n    DescriptionEN: getFieldValue(element, \"DescriptionEN\"),\r\n    Code: getFieldValue(element, \"Code\"),\r\n    PriceUAH: getFieldValue(element, \"PriceUAH\"),\r\n    Unit: getFieldValue(element, \"Unit\"),\r\n    Length: getFieldValue(element, \"Length\"),\r\n    Width: getFieldValue(element, \"Width\"),\r\n    Height: getFieldValue(element, \"Height\"),\r\n    Density: getFieldValue(element, \"Density\"),\r\n    WeightElement: getFieldValue(element, \"WeightElement\"),\r\n    Perimeter: getFieldValue(element, \"Perimeter\"),\r\n    Area: getFieldValue(element, \"Area\"),\r\n    Volume: getFieldValue(element, \"Volume\"),\r\n    WriteOffCoefficient: getFieldValue(element, \"WriteOffCoefficient\"),\r\n    Consumption: getFieldValue(element, \"Consumption\"),\r\n    ConsumptionPer1m2: getFieldValue(element, \"ConsumptionPer1m2\"),\r\n    ConsumptionPer1m3: getFieldValue(element, \"ConsumptionPer1m3\"),\r\n    ConsumptionPer1m: getFieldValue(element, \"ConsumptionPer1m\"),\r\n    ConsumptionPer1t: getFieldValue(element, \"ConsumptionPer1t\"),\r\n    OwnerBarcode: getFieldValue(element, \"OwnerBarcode\"),\r\n    Comment: getFieldValue(element, \"Comment\"),\r\n  };\r\n\r\n  // Масив для рендеру інпутів\r\n  const inputs = [\r\n    {\r\n      label: \"Довжина, мм\",\r\n      id: \"Length\",\r\n    },\r\n    {\r\n      label: \"Ширина, мм\",\r\n      id: \"Width\",\r\n    },\r\n    {\r\n      label: \"Висота, мм\",\r\n      id: \"Height\",\r\n    },\r\n    {\r\n      label: \"Щільність, кг/м3\",\r\n      id: \"Density\",\r\n    },\r\n    {\r\n      label: \"Вага, кг\",\r\n      id: \"WeightElement\",\r\n    },\r\n    {\r\n      label: \"Периметр, мм\",\r\n      id: \"Perimeter\",\r\n    },\r\n    {\r\n      label: \"Площа, м2\",\r\n      id: \"Area\",\r\n    },\r\n    {\r\n      label: \"Об'єм, м3\",\r\n      id: \"Volume\",\r\n    },\r\n    {\r\n      label: \"Коефіціент витрати\",\r\n      id: \"WriteOffCoefficient\",\r\n    },\r\n    {\r\n      label: \"Витрата\",\r\n      id: \"Consumption\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m2\",\r\n      id: \"ConsumptionPer1m2\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m3\",\r\n      id: \"ConsumptionPer1m3\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/m\",\r\n      id: \"ConsumptionPer1m\",\r\n    },\r\n    {\r\n      label: \"Витрата 1/t\",\r\n      id: \"ConsumptionPer1t\",\r\n    },\r\n    {\r\n      label: \"Власний код\",\r\n      id: \"OwnerBarcode\",\r\n    },\r\n  ];\r\n\r\n  // Схема валідації\r\n  const addElementSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    Code: yup\r\n      .string()\r\n      .matches(\r\n        /^\\d{8}-\\d$/,\r\n        \"Код повине бути довжиною 8 цифр, дефіс, 1 цифра, наприклад 47000000-6\"\r\n      ),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    Length: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Width: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Height: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Density: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WeightElement: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Perimeter: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\")\r\n      .integer(\"Число повинне бути цілим\"),\r\n    Area: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Volume: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    WriteOffCoefficient: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    Consumption: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m2: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m3: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1m: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    ConsumptionPer1t: yup\r\n      .number()\r\n      .typeError(\"Введіть число\")\r\n      .positive(\"Число повинне бути додатним\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    const { resetForm } = actions;\r\n\r\n    // перебирає ключі отримані із форми і перевіряє чи є вони у об'єкта який редагується, якщо немає то додає\r\n    const changedValues = Object.keys(values).reduce((acc, key) => {\r\n      if (values[key] !== initialValues[key]) {\r\n        acc[key] = values[key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    // Відправка даних у верхній компонент\r\n    edit(id, changedValues);\r\n    actions.setSubmitting(false); // Позначити, що обробка завершена\r\n\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Редагувати матеріал: {element.DescriptionUA}</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addElementSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                autoFocus={true}\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введіть опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Code\">Код</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Код\"\r\n                name=\"Code\"\r\n                id=\"Code\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Code,\r\n                  props.values.Code\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"Code\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputGroup>\r\n                  {inputs.map(({ id, label }) => (\r\n                    <InputWrapper key={id}>\r\n                      <label htmlFor={id}>{label}</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder={label}\r\n                        name={id}\r\n                        id={id}\r\n                        bordercolor={validationColor(\r\n                          props.errors[id],\r\n                          props.values[id]\r\n                        )}\r\n                      />\r\n                      <ErrorMessage\r\n                        name={id}\r\n                        render={(msg) => (\r\n                          <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                        )}\r\n                      />\r\n                    </InputWrapper>\r\n                  ))}\r\n                </InputGroup>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Редагувати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n      {/* {isLoading && <BarLoader color=\"#125b56\" width=\"100%\" />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditMaterialForm;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\n// functions\r\nimport {\r\n  addMaterial,\r\n  updateMaterial,\r\n  getByParentId,\r\n  removeMaterial,\r\n} from \"../../services\";\r\nimport { createLevel } from \"../../services\";\r\n// components\r\nimport Category from \"../Category/Category\";\r\nimport { List, Item } from \"./MaterialList.styled\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport { Button } from \"../Button/Button\";\r\nimport Confirm from \"../Confirm/Confirm\";\r\nimport AddMaterialForm from \"../AddMaterialForm/AddMaterialForm\";\r\nimport EditMaterialForm from \"../EditMaterialForm/EditMaterialForm\";\r\n\r\nconst MaterialList = ({ items, query }) => {\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [newMaterial, setNewMaterial] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [curentItems, setCurrentItems] = useState(items);\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n\r\n  // Запит по під категорії\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    async function subCategory(selectedId) {\r\n      // console.log(\"get subcategory effect\");\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await getByParentId(selectedId, controller.signal);\r\n        setSubCategories(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось завантажити підкагеторії\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    if (!selectedId) {\r\n      return;\r\n    }\r\n    subCategory(selectedId);\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [selectedId, newMaterial, setSubCategories]);\r\n\r\n  // Створення класів для кольорів\r\n  const level = useMemo(() => {\r\n    if (items.length > 0) {\r\n      return createLevel(items[0].ElementNestingLevel);\r\n    }\r\n    return null;\r\n  }, [items]);\r\n\r\n  // Функція  тоглить відкриття категорії\r\n  const selectCategory = async (event, id) => {\r\n    if (event.target.tagName !== \"path\" && event.target.tagName !== \"svg\") {\r\n      toggleCategory(id);\r\n    }\r\n  };\r\n\r\n  // Відкриття-закриття категорії\r\n  function toggleCategory(id) {\r\n    if (selectedId === id) {\r\n      setSelectedId(null);\r\n    } else {\r\n      setSelectedId(id);\r\n    }\r\n  }\r\n\r\n  // Створення матеріалу\r\n  function createMaterial(material) {\r\n    const controller = new AbortController();\r\n    async function createMaterial(newMaterial) {\r\n      try {\r\n        const response = await addMaterial(newMaterial, controller.signal);\r\n        toast.success(\"Матеріал успішно створено\");\r\n        setNewMaterial(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось створити матеріал\");\r\n      }\r\n    }\r\n    createMaterial(material);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n\r\n  // Редагування матеріалу\r\n  function editMaterial(id, editedMaterial) {\r\n    const controller = new AbortController();\r\n    async function edit(id, editedMaterial) {\r\n      try {\r\n        const response = await updateMaterial(\r\n          id,\r\n          editedMaterial,\r\n          controller.signal\r\n        );\r\n        // console.log(\"response: \", response);\r\n        setCurrentItems(\r\n          curentItems.map((item) => {\r\n            if (item._id === id) {\r\n              return {\r\n                ...response.data,\r\n              };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n        // console.log(\"response.data: \", response.data);\r\n        toast.success(\"Матеріал успішно оновлено\");\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось оновити матеріал\");\r\n      }\r\n    }\r\n    edit(id, editedMaterial);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n  // Відкриття меню підтвердження\r\n  const confirmDelete = (id) => {\r\n    setConfirmOpen(id);\r\n  };\r\n\r\n  // Тогл меню підтвердження\r\n  const toggleConfirm = () => {\r\n    setConfirmOpen(!confirmOpen);\r\n  };\r\n\r\n  // Видалення матеріалу\r\n  async function handleDelete(id) {\r\n    try {\r\n      const result = await removeMaterial(id);\r\n      if (result) {\r\n        toast.info(\"Матеріал успішно видалений\");\r\n        setCurrentItems(\r\n          curentItems.filter(\r\n            (category) => category._id !== result.data.material._id\r\n          )\r\n        );\r\n        setConfirmOpen(false);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Не вдалось видалити  матеріал\");\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <List level={level}>\r\n          {curentItems.map((item) => (\r\n            <Item key={item._id}>\r\n              {/* якщо вибраний елемент */}\r\n              {selectedId === item._id ? (\r\n                <Category\r\n                  element={item}\r\n                  selectCategory={(event) => selectCategory(event, item._id)}\r\n                  query={query}\r\n                  isSelected={selectedId === item._id}\r\n                  handleDelete={confirmDelete}\r\n                  addForm={AddMaterialForm}\r\n                  editForm={EditMaterialForm}\r\n                  create={createMaterial}\r\n                  edit={editMaterial}\r\n                  isdelete={item._id === confirmOpen ? item._id : undefined}\r\n                >\r\n                  {isLoading ? (\r\n                    <BarLoader color=\"#125b56\" width=\"100%\" />\r\n                  ) : (\r\n                    <MaterialList items={subCategories} query={query} />\r\n                  )}\r\n                </Category>\r\n              ) : (\r\n                <Category\r\n                  element={item}\r\n                  selectCategory={(event) => selectCategory(event, item._id)}\r\n                  query={query}\r\n                  handleDelete={confirmDelete}\r\n                  addForm={AddMaterialForm}\r\n                  editForm={EditMaterialForm}\r\n                  create={createMaterial}\r\n                  edit={editMaterial}\r\n                  isdelete={item._id === confirmOpen ? item._id : undefined}\r\n                ></Category>\r\n              )}\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      {confirmOpen && (\r\n        <Confirm onClose={toggleConfirm} title=\"Ви точно хочете видалити?\">\r\n          <>\r\n            <Button onClick={() => handleDelete(confirmOpen)} role=\"warning\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={toggleConfirm}>Cancel</Button>\r\n          </>\r\n        </Confirm>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MaterialList;\r\n","import React from \"react\";\r\nimport MaterialList from \"../MaterialList/MaterialList\";\r\nimport ServiceList from \"../ServiceList/ServiceList\";\r\n\r\nconst SearchResults = ({ results, query, variant }) => {\r\n  if (variant === \"material\") {\r\n    return (\r\n      <div>\r\n        {results.length > 0 && <MaterialList items={results} query={query} />}\r\n      </div>\r\n    );\r\n  }\r\n  if (variant === \"service\") {\r\n    return (\r\n      <div>\r\n        {results.length > 0 && <ServiceList items={results} query={query} />}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchResults;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyled = styled.form`\r\n  padding-top: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-bottom: ${(props) => props.theme.space[2]}px;\r\n  @media screen and (min-width: 680px) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n`;\r\nexport const Input = styled.input`\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  width: 100%;\r\n  padding: 6px;\r\n  box-sizing: border-box;\r\n  border-top: ${(props) => props.theme.borders.bold};\r\n  border-bottom: ${(props) => props.theme.borders.bold};\r\n  border-left: ${(props) => props.theme.borders.none};\r\n  border-right: ${(props) => props.theme.borders.none};\r\n  text-decoration: none;\r\n  &:focus {\r\n    border-top: ${(props) => props.theme.borders.bold};\r\n    border-bottom: ${(props) => props.theme.borders.bold};\r\n    border-left: ${(props) => props.theme.borders.none};\r\n    border-right: ${(props) => props.theme.borders.none};\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { FormStyled, Input, Label } from \"./Search.styled\";\r\nimport { SearchButton, BackButton } from \"../Button/Button\";\r\n\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport { IoMdBackspace } from \"react-icons/io\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BarLoader } from \"react-spinners\";\r\n\r\nconst Search = ({ submit, isLoading, back, isSubmiting }) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const normalizedQuery = event.currentTarget.value.toLowerCase();\r\n    setSearchValue(normalizedQuery);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (searchValue.trim().length < 1) {\r\n      toast.error(\"Введіть запит в поле пошуку\");\r\n      return;\r\n    } else submit(searchValue.trim());\r\n  };\r\n\r\n  const clearQuery = () => {\r\n    setSearchValue(\"\");\r\n    back();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormStyled onSubmit={handleSubmit}>\r\n        <BackButton\r\n          icon={IoMdBackspace}\r\n          type=\"button\"\r\n          onClick={clearQuery}\r\n        ></BackButton>\r\n        <Label>\r\n          <Input\r\n            name=\"search\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={searchValue}\r\n          ></Input>\r\n        </Label>\r\n        <SearchButton\r\n          icon={IoSearch}\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n          disabled={isSubmiting}\r\n        ></SearchButton>\r\n      </FormStyled>\r\n      {isLoading && <BarLoader color=\"#125b56\" width=\"100%\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\nimport { setBgColor } from \"../../services\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: ${(props) => props.theme.space[3]}px;\r\n\r\n  border-left: 2px solid;\r\n  border-color: ${setBgColor};\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:hover,\r\n  &:focus {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: ${(props) => props.theme.space[1]}px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: start;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../Button/Button\";\r\nimport { CloseButton } from \"../Button/Button\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport { CgClose } from \"react-icons/cg\";\r\n\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./AddServiceForm.styled\";\r\n\r\nconst AddServiceForm = ({ onClose, id, create }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Початкові значення\r\n  const initialValues = {\r\n    DescriptionUA: \"\",\r\n    DescriptionEN: \"\",\r\n    PriceUAH: \"\",\r\n    Unit: \"\",\r\n    OwnerBarcode: \"\",\r\n    Comment: \"\",\r\n  };\r\n  // Схема валідації\r\n  const addServiceSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    // formik метод очистки форми\r\n    const { resetForm } = actions;\r\n\r\n    // фільтрація заповнених полів\r\n    const filteredValues = Object.fromEntries(\r\n      Object.entries(values).filter(([key, value]) => value !== \"\")\r\n    );\r\n\r\n    const additionalElement = {\r\n      ParentElementId: id,\r\n      ...filteredValues,\r\n    };\r\n    create(additionalElement);\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Додати послугу</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addServiceSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                autoFocus={true}\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введість опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputWrapper>\r\n                  <label htmlFor=\"OwnerBarcode\">Власний код</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Власний код\"\r\n                    name=\"OwnerBarcode\"\r\n                    id=\"OwnerBarcode\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.OwnerBarcode,\r\n                      props.values.OwnerBarcode\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"PriceUAH\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </InputWrapper>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Додати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddServiceForm;\r\n","import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  padding-left: 15px;\r\n  padding-top: 25px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: ${(props) => props.theme.shadows.full};\r\n  position: relative;\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n`;\r\n\r\nexport const TextArea = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n\r\n  font-weight: 400;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  color: ${(props) => props.theme.colors.black};\r\n  height: 21px;\r\n  resize: none;\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  @media screen and (min-width: 480px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  padding: 8px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  /* @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  } */\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n    outline: 0px solid white;\r\n  }\r\n`;\r\nexport const Select = styled.select`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  height: 41px;\r\n  letter-spacing: -0.02em;\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n    box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  top: 65px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { Button, IconButton } from \"../Button/Button\";\r\nimport { CloseButton } from \"../Button/Button\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport { IoMdArrowDropupCircle } from \"react-icons/io\";\r\nimport { CgClose } from \"react-icons/cg\";\r\n\r\nimport {\r\n  InputWrapper,\r\n  StyledForm,\r\n  TextArea,\r\n  Input,\r\n  DescriptionWrapper,\r\n  ErrorMessageStyled,\r\n  Select,\r\n  ButtonWrapper,\r\n  FormTitle,\r\n} from \"./EditServiceForm.styled\";\r\n\r\nconst EditServiceForm = ({ element, onClose, id, edit }) => {\r\n  const [additionalFields, setAdditionalFields] = useState(false);\r\n  const unitTypes = [\"category\", \"m\", \"m2\", \"m3\", \"t\", \"kg\", \"pcs.\"];\r\n\r\n  // Функція, що перевіряє значення на undefined і встановлює пустий рядок в разі потреби\r\n  const getFieldValue = (obj, fieldName) => {\r\n    if (\r\n      !obj ||\r\n      typeof obj[fieldName] === \"undefined\" ||\r\n      obj[fieldName] === null\r\n    ) {\r\n      return \"\";\r\n    } else {\r\n      return obj[fieldName];\r\n    }\r\n  };\r\n\r\n  // Початкові значення\r\n  const initialValues = {\r\n    DescriptionUA: getFieldValue(element, \"DescriptionUA\"),\r\n    DescriptionEN: getFieldValue(element, \"DescriptionEN\"),\r\n    PriceUAH: getFieldValue(element, \"PriceUAH\"),\r\n    Unit: getFieldValue(element, \"Unit\"),\r\n    OwnerBarcode: getFieldValue(element, \"OwnerBarcode\"),\r\n    Comment: getFieldValue(element, \"Comment\"),\r\n  };\r\n  // Схема валідації\r\n  const addServiceSchema = yup.object().shape({\r\n    DescriptionUA: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\")\r\n      .required(\"Опис обов'язкове поле\"),\r\n    DescriptionEN: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n    PriceUAH: yup.number().typeError(\"Введіть число\").positive(),\r\n    Unit: yup\r\n      .string()\r\n      .oneOf(unitTypes, \"Недопустимий тип одиниці виміру\")\r\n      .required(\"Оберіть одиниці виміру\"),\r\n    OwnerBarcode: yup\r\n      .string()\r\n      .min(3, \"Занадто короткий опис\")\r\n      .max(500, \"Занадто довкий опис\"),\r\n  });\r\n\r\n  // Показує апо приховує додаткові параметри\r\n  function toggleAdditionalFields() {\r\n    setAdditionalFields(!additionalFields);\r\n  }\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    // formik метод очистки форми\r\n    const { resetForm } = actions;\r\n\r\n    // перебирає ключі отримані із форми і перевіряє чи є вони у об'єкта який редагується, якщо немає то додає\r\n    const changedValues = Object.keys(values).reduce((acc, key) => {\r\n      if (values[key] !== initialValues[key]) {\r\n        acc[key] = values[key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n    // console.log(\"changedValues: \", changedValues);\r\n\r\n    // Відправка даних у верхній компонент\r\n    edit(id, changedValues);\r\n    actions.setSubmitting(false); // Позначити, що обробка завершена\r\n\r\n    // Очистка форми\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormTitle>Редагувати послугу: {element.DescriptionUA}</FormTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={addServiceSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <CloseButton onClick={onClose} icon={CgClose}></CloseButton>\r\n            <DescriptionWrapper>\r\n              <label htmlFor=\"DescriptionUA\">Опис</label>\r\n              <TextArea\r\n                autoFocus={true}\r\n                name=\"DescriptionUA\"\r\n                id=\"DescriptionUA\"\r\n                placeholder=\"Введість опис українською мовою\"\r\n                type=\"text\"\r\n                bordercolor={validationColor(\r\n                  props.errors.DescriptionUA,\r\n                  props.values.DescriptionUA\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"DescriptionUA\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </DescriptionWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"Unit\">Одиниці виміру</label>\r\n              <Field\r\n                as={Select}\r\n                name=\"Unit\"\r\n                bordercolor={validationColor(\r\n                  props.errors.Unit,\r\n                  props.values.Unit\r\n                )}\r\n              >\r\n                <option value=\"\" disabled hidden>\r\n                  Оберіть одиницю виміру\r\n                </option>\r\n                <option value=\"category\">Категорія</option>\r\n                <option value=\"pcs.\">Штука</option>\r\n                <option value=\"m\">Метр погонний</option>\r\n                <option value=\"m2\">Метр квадратний</option>\r\n                <option value=\"m3\">Метр кубічний</option>\r\n                <option value=\"t\">Тона</option>\r\n                <option value=\"kg\">Кілограм</option>\r\n              </Field>\r\n\r\n              <ErrorMessage\r\n                name=\"Unit\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"PriseUAH\">Ціна в грн.</label>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Ціна\"\r\n                name=\"PriceUAH\"\r\n                id=\"PriceUAH\"\r\n                bordercolor={validationColor(\r\n                  props.errors.PriceUAH,\r\n                  props.values.PriceUAH\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"PriceUAH\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <IconButton\r\n              type=\"button\"\r\n              visibility=\"visible\"\r\n              variant=\"neutral\"\r\n              tooltip={\"Додаткові властивості\"}\r\n              icon={\r\n                additionalFields\r\n                  ? IoMdArrowDropupCircle\r\n                  : IoMdArrowDropdownCircle\r\n              }\r\n              onClick={() => toggleAdditionalFields()}\r\n            ></IconButton>\r\n            {additionalFields && (\r\n              <>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"DescriptionEN\">Опис</label>\r\n                  <TextArea\r\n                    name=\"DescriptionEN\"\r\n                    id=\"DescriptionEN\"\r\n                    placeholder=\"Введіть опис англійською мовою\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.DescriptionEN,\r\n                      props.values.DescriptionEN\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"DescriptionEN\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n                <InputWrapper>\r\n                  <label htmlFor=\"OwnerBarcode\">Власний код</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Власний код\"\r\n                    name=\"OwnerBarcode\"\r\n                    id=\"OwnerBarcode\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.OwnerBarcode,\r\n                      props.values.OwnerBarcode\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"PriceUAH\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </InputWrapper>\r\n                <DescriptionWrapper>\r\n                  <label htmlFor=\"Comment\">Коментар</label>\r\n                  <TextArea\r\n                    name=\"Comment\"\r\n                    id=\"Comment\"\r\n                    placeholder=\"Введіть коментар\"\r\n                    type=\"text\"\r\n                    bordercolor={validationColor(\r\n                      props.errors.Comment,\r\n                      props.values.Comment\r\n                    )}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"Comment\"\r\n                    render={(msg) => (\r\n                      <ErrorMessageStyled>{msg}</ErrorMessageStyled>\r\n                    )}\r\n                  />\r\n                </DescriptionWrapper>\r\n              </>\r\n            )}\r\n\r\n            <ButtonWrapper>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={Object.keys(props.errors).length > 0}\r\n              >\r\n                Редагувати\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditServiceForm;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\n// functions\r\nimport { getServiceByParentId } from \"../../services\";\r\nimport { createLevel } from \"../../services\";\r\nimport { addService } from \"../../services\";\r\nimport { updateService } from \"../../services\";\r\nimport { removeService } from \"../../services\";\r\n\r\n// components\r\nimport Category from \"../Category/Category\";\r\nimport { List, Item } from \"./ServiceList.styled\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddServiceForm from \"../AddServiceForm/AddServiceForm\";\r\nimport EditServiceForm from \"../EditServiceForm/EditServiceForm\";\r\nimport Confirm from \"../Confirm/Confirm\";\r\nimport { Button } from \"../Button/Button\";\r\n\r\nconst ServiceList = ({ items, query }) => {\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [newService, setNewService] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [curentItems, setCurrentItems] = useState(items);\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n\r\n  // Запит по під категорії\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    async function subCategory(selectedId) {\r\n      // console.log(\"get subcategory effect\");\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await getServiceByParentId(\r\n          selectedId,\r\n          controller.signal\r\n        );\r\n        setSubCategories(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось завантажити підкагеторії\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    if (!selectedId) {\r\n      return;\r\n    }\r\n    subCategory(selectedId);\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [selectedId, newService, setSubCategories]);\r\n\r\n  const level = useMemo(() => {\r\n    if (items.length > 0) {\r\n      return createLevel(items[0].ElementNestingLevel);\r\n    }\r\n    return null;\r\n  }, [items]);\r\n\r\n  // Функція формує cpv код і тоглить відкриття категорії\r\n  const selectCategory = async (event, id) => {\r\n    if (event.target.tagName !== \"path\" && event.target.tagName !== \"svg\") {\r\n      toggleCategory(id);\r\n    }\r\n  };\r\n\r\n  // Відкриття-закриття категорії\r\n  function toggleCategory(id) {\r\n    if (selectedId === id) {\r\n      // console.log(\"set null\");\r\n      setSelectedId(null);\r\n    } else {\r\n      // console.log(\"set\", id);\r\n      setSelectedId(id);\r\n    }\r\n  }\r\n\r\n  // Створення сервісу\r\n  function createService(service) {\r\n    const controller = new AbortController();\r\n    async function createService(newService) {\r\n      try {\r\n        const response = await addService(newService, controller.signal);\r\n        toast.success(\"Послугу успішно створено\");\r\n        setNewService(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось створити послугу\");\r\n      }\r\n    }\r\n    createService(service);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n\r\n  // Редагування сервісу\r\n  function editService(id, editedService) {\r\n    const controller = new AbortController();\r\n    async function edit(id, editedService) {\r\n      try {\r\n        const response = await updateService(\r\n          id,\r\n          editedService,\r\n          controller.signal\r\n        );\r\n        setCurrentItems(\r\n          curentItems.map((item) => {\r\n            if (item._id === id) {\r\n              return {\r\n                ...response.data,\r\n              };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n        toast.success(\"Послугу успішно оновлено\");\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось оновити послугу\");\r\n      }\r\n    }\r\n    edit(id, editedService);\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }\r\n  // Відкриття меню підтвердження\r\n  const confirmDelete = (id) => {\r\n    setConfirmOpen(id);\r\n  };\r\n\r\n  // Тогл меню підтвердження\r\n  const toggleConfirm = () => {\r\n    setConfirmOpen(!confirmOpen);\r\n  };\r\n\r\n  // Видалення сервісу\r\n  async function handleDelete(id) {\r\n    try {\r\n      const result = await removeService(id);\r\n      if (result) {\r\n        toast.info(\"Послуга успішно видалена\");\r\n        setCurrentItems(\r\n          curentItems.filter(\r\n            (category) => category._id !== result.data.service._id\r\n          )\r\n        );\r\n        setConfirmOpen(false);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Не вдалось видалити  послугу\");\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List level={level}>\r\n        {curentItems.map((item) => (\r\n          <Item key={item._id}>\r\n            {/* якщо вибраний елемент */}\r\n            {selectedId === item._id ? (\r\n              <Category\r\n                element={item}\r\n                selectCategory={(event) => selectCategory(event, item._id)}\r\n                query={query}\r\n                isSelected={selectedId === item._id}\r\n                handleDelete={confirmDelete}\r\n                addForm={AddServiceForm}\r\n                editForm={EditServiceForm}\r\n                create={createService}\r\n                edit={editService}\r\n                isdelete={item._id === confirmOpen ? item._id : undefined}\r\n              >\r\n                {isLoading ? (\r\n                  <BarLoader color=\"#125b56\" width=\"100%\" />\r\n                ) : (\r\n                  <ServiceList items={subCategories} query={query} />\r\n                )}\r\n              </Category>\r\n            ) : (\r\n              <Category\r\n                element={item}\r\n                selectCategory={(event) => selectCategory(event, item._id)}\r\n                handleDelete={confirmDelete}\r\n                query={query}\r\n                addForm={AddServiceForm}\r\n                editForm={EditServiceForm}\r\n                create={createService}\r\n                edit={editService}\r\n                isdelete={item._id === confirmOpen ? item._id : undefined}\r\n              ></Category>\r\n            )}\r\n          </Item>\r\n        ))}\r\n      </List>\r\n      {confirmOpen && (\r\n        <Confirm onClose={toggleConfirm} title=\"Ви точно хочете видалити?\">\r\n          <>\r\n            <Button onClick={() => handleDelete(confirmOpen)} role=\"warning\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={toggleConfirm}>Cancel</Button>\r\n          </>\r\n        </Confirm>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n"],"names":["_ref","id","toggleAddForm","toggleEditeForm","handleDelete","useContext","context","role","_jsxs","_Fragment","children","_jsx","IconButton","icon","FaSquarePlus","visibility","variant","tooltip","onClick","MdModeEditOutline","MdDelete","MenuWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","props","isdelete","theme","colors","atention","backgroundGrey","space","CategoryWrapper","_templateObject3","CodeWrapper","_templateObject4","setBgColor","CategoryCode","p","_templateObject5","textWhiteColor","fontSizes","m","DescriptionWrapper","_templateObject6","CategoryDescription","_templateObject7","_templateObject8","HilightDescription","_templateObject9","s","type","MaterialPrice","_templateObject10","green","MaterialUnit","_templateObject11","orange","_templateObject12","Extended","_templateObject13","fadeIn","keyframes","_templateObject14","expandHeight","_templateObject15","SubList","_templateObject16","Animation","_templateObject17","element","_ref$element","_id","ParentElementId","Code","DescriptionUA","PriceUAH","Unit","ElementNestingLevel","selectCategory","query","isSelected","AddForm","addForm","create","EditForm","editForm","edit","_useState","useState","_useState2","_slicedToArray","level","setLevel","_useState3","_useState4","addFormVisible","setAddFormVisible","_useState5","_useState6","editFormVisible","setEditFormVisible","useEffect","createLevel","CopyToClipboard","text","onCopy","toast","info","concat","IoIosCopy","position","hiLight","ItemMenu","TransitionGroup","CSSTransition","classNames","timeout","unmountOnExit","onClose","in","List","ul","Item","li","StyledForm","Form","shadows","full","FormTitle","h2","TextArea","Field","backgroundWhite","borders","bold","bordercolor","radii","normal","black","shadow","_ref2","InputWrapper","Input","_ref3","_ref4","Select","select","_ref5","_ref6","InputGroup","ErrorMessageStyled","invalid","ButtonWrapper","additionalFields","setAdditionalFields","inputs","label","addMaterialSchema","yup","shape","min","max","required","DescriptionEN","matches","typeError","positive","oneOf","Length","integer","Width","Height","Density","WeightElement","Perimeter","Area","Volume","WriteOffCoefficient","Consumption","ConsumptionPer1m2","ConsumptionPer1m3","ConsumptionPer1m","ConsumptionPer1t","OwnerBarcode","Formik","initialValues","Comment","validationSchema","onSubmit","values","actions","resetForm","filteredValues","Object","fromEntries","entries","filter","additionalElement","_objectSpread","CloseButton","CgClose","htmlFor","autoFocus","name","placeholder","validationColor","errors","ErrorMessage","render","msg","as","value","disabled","hidden","IoMdArrowDropupCircle","IoMdArrowDropdownCircle","map","Button","keys","length","getFieldValue","obj","fieldName","addElementSchema","changedValues","reduce","acc","key","setSubmitting","MaterialList","items","subCategories","setSubCategories","selectedId","setSelectedId","newMaterial","setNewMaterial","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","curentItems","setCurrentItems","_useState11","_useState12","confirmOpen","setConfirmOpen","controller","AbortController","_subCategory","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getByParentId","signal","sent","data","t0","error","finish","stop","apply","arguments","_x","subCategory","abort","useMemo","_callee2","event","_context2","target","tagName","toggleCategory","_x2","_x3","createMaterial","material","_createMaterial","_callee3","_context3","addMaterial","success","_x4","editMaterial","editedMaterial","_edit","_callee4","_context4","updateMaterial","item","_x5","_x6","confirmDelete","toggleConfirm","_handleDelete","_callee5","result","_context5","removeMaterial","category","Category","AddMaterialForm","EditMaterialForm","undefined","BarLoader","color","width","Confirm","title","_x7","results","ServiceList","FormStyled","form","Label","input","none","submit","back","isSubmiting","searchValue","setSearchValue","handleSubmit","preventDefault","trim","BackButton","IoMdBackspace","onChange","normalizedQuery","currentTarget","toLowerCase","SearchButton","IoSearch","addServiceSchema","newService","setNewService","getServiceByParentId","createService","service","_createService","addService","editService","editedService","updateService","removeService","AddServiceForm","EditServiceForm"],"sourceRoot":""}