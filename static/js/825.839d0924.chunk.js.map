{"version":3,"file":"static/js/825.839d0924.chunk.js","mappings":"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","sources":["components/Users/Users.styled.js","components/Users/Users.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","pages/AdminPage/AdminPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { setRoleColor } from \"../../services\";\r\n\r\nexport const Table = styled.table`\r\n  border-collapse: collapse;\r\n\r\n  & caption {\r\n    text-align: left;\r\n  }\r\n\r\n  & th,\r\n  & td {\r\n    padding: 2px 10px;\r\n    border: 1px solid #2a2a2a;\r\n  }\r\n\r\n  & tr:hover {\r\n    background-color: ${(props) => props.theme.colors.backgroundGrey};\r\n  }\r\n`;\r\n\r\nexport const Row = styled.tr``;\r\n\r\nexport const Name = styled.td`\r\n  /* color: ${(props) => props.theme.colors.white}; */\r\n  /* background-color: ${setRoleColor}; */\r\n`;\r\nexport const Role = styled.td`\r\n  /* color: ${(props) => props.theme.colors.white}; */\r\n  background-color: ${setRoleColor};\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getAllUsers, updateRole } from \"../../services\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Table, Row, Name, Role } from \"./Users.styled\";\r\nimport Select from \"react-select\";\r\n\r\nconst options = [\r\n  { value: \"user\", label: \"user\" },\r\n  { value: \"designer\", label: \"designer\" },\r\n  { value: \"creator\", label: \"creator\" },\r\n  { value: \"service\", label: \"service\" },\r\n  { value: \"rental\", label: \"rental\" },\r\n];\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n\r\n    async function allUsers() {\r\n      try {\r\n        const response = await getAllUsers(controller.signal);\r\n        // console.log(\"response: \", response.data);\r\n        setUsers(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Не вдалось завантажити користувачів\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    allUsers();\r\n  }, []);\r\n\r\n  // function handleChange(selectedRole, id) {\r\n  //   // console.log(\"User id: \", id);\r\n  //   setSelectedRole(selectedRole);\r\n  //   // console.log(\"selectedRole: \", selectedRole.value);\r\n\r\n  //   // запит на зміну ролі\r\n  //   const controller = new AbortController();\r\n\r\n  //   async function updateUserRole(id) {\r\n  //     try {\r\n  //       await updateRole(id, selectedRole.value, controller.signal);\r\n  //     } catch (error) {\r\n  //       toast.error(\"Не вдалось оновити роль\");\r\n  //     }\r\n  //   }\r\n  //   updateUserRole(id, selectedRole);\r\n  // }\r\n  async function handleChange(selectedRole, id) {\r\n    setSelectedRole(selectedRole);\r\n    // Запит на зміну ролі\r\n    const controller = new AbortController();\r\n    async function updateUserRole(id) {\r\n      try {\r\n        // Виконуємо запит на зміну ролі\r\n        const response = await updateRole(\r\n          id,\r\n          selectedRole.value,\r\n          controller.signal\r\n        );\r\n\r\n        // Якщо запит успішний, оновлюємо стан користувачів\r\n        if (response.status === 200) {\r\n          // Знаходимо індекс користувача, якому ми змінюємо роль\r\n          const userIndex = users.findIndex((user) => user._id === id);\r\n\r\n          // Перевіряємо, чи знайдено користувача з вказаним ідентифікатором\r\n          if (userIndex !== -1) {\r\n            // Клонуємо масив користувачів\r\n            const updatedUsers = [...users];\r\n\r\n            // Оновлюємо роль користувача з вказаним ідентифікатором\r\n            updatedUsers[userIndex] = {\r\n              ...updatedUsers[userIndex],\r\n              role: selectedRole.value,\r\n            };\r\n\r\n            // Встановлюємо оновлений масив користувачів у стані компонента\r\n            setUsers(updatedUsers);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // Виводимо повідомлення про помилку, якщо сталася помилка під час виконання запиту\r\n        toast.error(\"Не вдалось оновити роль\");\r\n      }\r\n    }\r\n\r\n    // Викликаємо функцію для оновлення ролі користувача\r\n    updateUserRole(id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && (\r\n        <div>\r\n          <Table>\r\n            <caption>Список зареєстрованих користувачів</caption>\r\n            <thead>\r\n              <tr>\r\n                <th>Ім'я</th>\r\n                <th>Прізвище</th>\r\n                <th>Email</th>\r\n                <th>Телефон</th>\r\n                <th>Компанія</th>\r\n                <th>Посада</th>\r\n                <th>Змінити роль</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => {\r\n                return (\r\n                  <Row key={user._id}>\r\n                    <Name role={user.role}>{user.name}</Name>\r\n                    <Name role={user.role}>{user.lastName}</Name>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.phone}</td>\r\n                    <td>{user.company}</td>\r\n                    <td>{user.jobRole}</td>\r\n                    <Role role={user.role}>\r\n                      <Select\r\n                        isDisabled={user.role === \"admin\"}\r\n                        placeholder={user.role}\r\n                        defaultValue={selectedRole}\r\n                        onChange={(option) => handleChange(option, user._id)}\r\n                        options={options}\r\n                      />\r\n                    </Role>\r\n                  </Row>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <p>Кількість користувачів: {users.length}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Navigation = styled.nav`\r\n  height: 100%;\r\n  border: 1px solid tomato;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: ${(props) => props.theme.shadows.shadow};\r\n  padding: 5px;\r\n  justify-content: start;\r\n  align-items: center;\r\n  width: 200px;\r\n`;\r\n","import React from \"react\";\r\nimport { Navigation } from \"./SideBar.styled\";\r\n\r\nconst SideBar = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Navigation>\r\n        <ul>{children}</ul>\r\n      </Navigation>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport Users from \"../../components/Users/Users\";\r\nimport SideBar from \"../../components/SideBar/SideBar\";\r\nimport Section from \"../../components/Section/Section\";\r\nconst AdminPage = () => {\r\n  return (\r\n    <Section>\r\n      <SideBar></SideBar>\r\n      <div>\r\n        <Users />\r\n      </div>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"names":["Table","styled","table","_templateObject","_taggedTemplateLiteral","props","theme","colors","backgroundGrey","Row","tr","_templateObject2","Name","td","_templateObject3","white","setRoleColor","Role","_templateObject4","options","value","label","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","selectedRole","setSelectedRole","_handleChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","id","controller","updateUserRole","_updateUserRole","wrap","_context3","prev","next","_callee2","userIndex","updatedUsers","_context2","updateRole","signal","sent","status","findIndex","user","_id","_toConsumableArray","_objectSpread","role","t0","toast","error","stop","apply","arguments","_x3","AbortController","useEffect","_allUsers","_callee","response","_context","getAllUsers","data","finish","allUsers","_jsx","_Fragment","children","_jsxs","map","name","lastName","email","phone","company","jobRole","Select","isDisabled","placeholder","defaultValue","onChange","option","_x","_x2","handleChange","length","Navigation","nav","shadows","shadow","_ref","Section","SideBar","Users"],"sourceRoot":""}