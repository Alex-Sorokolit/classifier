{"version":3,"file":"static/js/678.ac9bdef6.chunk.js","mappings":"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","sources":["webpack://classifier/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","components/GoogleLoginBtn/GoogleLoginBtn.styled.js","components/GoogleLoginBtn/GoogleLoginBtn.jsx","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginForm_formWrapper__TR8nd\",\"form\":\"LoginForm_form__njTkS\",\"inputWrapper\":\"LoginForm_inputWrapper__awyaz\",\"label\":\"LoginForm_label__uA+Ih\",\"input\":\"LoginForm_input__R6NCE\",\"submitBtn\":\"LoginForm_submitBtn__Ah5HJ\",\"loginBtn\":\"LoginForm_loginBtn__LvXCS\"};","import styled from \"styled-components\";\r\n\r\nimport { Form, Field } from \"formik\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  width: 300px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\r\n  border: ${(props) => props.theme.borders.bold};\r\n  border-color: ${({ bordercolor }) => bordercolor};\r\n  border-radius: ${(props) => props.theme.radii.normal};\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: -0.02em;\r\n  /* padding: 12px 12px 12px 40px; */\r\n  padding: 4px;\r\n  color: ${(props) => props.theme.colors.black};\r\n\r\n  @media screen and (min-width: 480px) {\r\n    font-size: 14px;\r\n    padding: 8px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: ${(props) => props.theme.borders.bold};\r\n    /* background-color: ${(props) => props.theme.colors.backgroundWhite}; */\r\n    border-color: ${({ bordercolor }) => bordercolor};\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  color: ${(props) => props.theme.colors.black};\r\n  &:hover,\r\n  &:focus {\r\n    color: ${(props) => props.theme.colors.hover};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label``;\r\n\r\nexport const ErrorMessageStyled = styled.div`\r\n  color: ${(props) => props.theme.colors.invalid};\r\n  position: absolute;\r\n  right: 0;\r\n`;\r\n\r\nexport const FormButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding-top: 10px;\r\n  padding-bottom: 20px;\r\n  @media screen and (min-width: 480px) {\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// Навігація\r\nimport { Button } from \"../Button/Button\";\r\nimport css from \"./LoginForm.module.css\";\r\nimport {\r\n  StyledForm,\r\n  Input,\r\n  InputWrapper,\r\n  StyledLink,\r\n  ErrorMessageStyled,\r\n  FormButtonWrapper,\r\n} from \"./LoginForm.styled\";\r\nimport { validationColor } from \"../../services/utility\";\r\nimport { authContext as context } from \"../../context/authContext\";\r\n\r\nconst LoginForm = () => {\r\n  const { onLogIn } = useContext(context);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const loginSchema = yup.object().shape({\r\n    email: yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"No password provided.\")\r\n      .min(6, \"Password is too short - should be 6 chars minimum.\"),\r\n  });\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    const { resetForm } = actions;\r\n    // console.log(\"values: \", values);\r\n    // console.log(\"actions: \", actions);\r\n\r\n    // Передача даних в контекст (глобальний стейт)\r\n    onLogIn(values);\r\n\r\n    // Очистка форми\r\n    resetForm();\r\n    // console.log(\"форма очищена\");\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={loginSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(props) => (\r\n          <StyledForm>\r\n            <h2>LogIn</h2>\r\n            <InputWrapper>\r\n              <label htmlFor=\"email\" className={css.label}>\r\n                Email\r\n              </label>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                autoFocus\r\n                bordercolor={validationColor(\r\n                  props.errors.email,\r\n                  props.values.email,\r\n                  \"rgb(0, 0, 0)\"\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <InputWrapper>\r\n              <label htmlFor=\"password\" className={css.label}>\r\n                Password\r\n              </label>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                bordercolor={validationColor(\r\n                  props.errors.password,\r\n                  props.values.password,\r\n                  \"rgb(0, 0, 0)\"\r\n                )}\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\r\n              />\r\n            </InputWrapper>\r\n            <FormButtonWrapper>\r\n              <Button type=\"submit\">LogIn</Button>\r\n              <StyledLink to={\"/registration\"}>Registration</StyledLink>\r\n            </FormButtonWrapper>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import styled from \"styled-components\";\r\nimport google from \"../../img/google.png\";\r\nexport const GoogleLink = styled.a`\r\n  position: absolute;\r\n  top: 30px;\r\n  padding: 2px;\r\n  height: 33px;\r\n  background-color: rgb(255, 255, 255);\r\n  width: 106px;\r\n  box-shadow: lightgray 0px 1px;\r\n  cursor: pointer;\r\n  font-family: Poppins, sans-serif;\r\n  font-weight: 500;\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  color: rgb(92, 108, 117);\r\n  border-radius: 5px;\r\n  border: none;\r\n  right: 9px;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    margin-left: 0px;\r\n    margin-right: 5px;\r\n    width: 32px;\r\n    height: 32px;\r\n    background-image: url(${google});\r\n  }\r\n`;\r\n","// import React from \"react\";\r\nimport React, { useContext } from \"react\";\r\nimport { authContext as context } from \"../../context/authContext\";\r\nimport { GoogleLink } from \"./GoogleLoginBtn.styled\";\r\n\r\nconst GoogleLoginBtn = () => {\r\n  const { onGoogleAuthenticate } = useContext(context);\r\n  return (\r\n    <GoogleLink\r\n      type=\"button\"\r\n      // href=\"https://classifier-backend.fly.dev/api/v1/auth/google/callback\"\r\n      onClick={onGoogleAuthenticate}\r\n    >\r\n      Google\r\n    </GoogleLink>\r\n  );\r\n};\r\n\r\nexport default GoogleLoginBtn;\r\n","import React from \"react\";\r\nimport Section from \"../../components/Section/Section\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\r\nimport GoogleLoginBtn from \"../../components/GoogleLoginBtn/GoogleLoginBtn\";\r\n\r\nconst LogInPage = () => {\r\n  return (\r\n    <Section>\r\n      <LoginForm />\r\n      <GoogleLoginBtn />\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","InputWrapper","div","_templateObject2","Input","Field","_templateObject3","props","theme","colors","backgroundWhite","borders","bold","_ref","bordercolor","radii","normal","black","_ref2","StyledLink","NavLink","_templateObject4","hover","ErrorMessageStyled","label","_templateObject5","_templateObject6","invalid","FormButtonWrapper","_templateObject7","onLogIn","useContext","context","loginSchema","yup","shape","email","required","password","min","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","_jsxs","htmlFor","className","css","name","type","id","autoFocus","validationColor","errors","ErrorMessage","render","msg","Button","to","GoogleLink","a","onGoogleAuthenticate","onClick","Section","LoginForm","GoogleLoginBtn"],"sourceRoot":""}